//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace giesler.org.lists.svc1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShoppingListItem", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class ShoppingListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string ListItemField;
        
        private string StoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListItem {
            get {
                return this.ListItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemField, value) != true)) {
                    this.ListItemField = value;
                    this.RaisePropertyChanged("ListItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Store {
            get {
                return this.StoreField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreField, value) != true)) {
                    this.StoreField = value;
                    this.RaisePropertyChanged("Store");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svc1.IShoppingListService")]
    public interface IShoppingListService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShoppingListService/GetStores", ReplyAction="http://tempuri.org/IShoppingListService/GetStoresResponse")]
        System.IAsyncResult BeginGetStores(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndGetStores(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShoppingListService/GetShoppingListItems", ReplyAction="http://tempuri.org/IShoppingListService/GetShoppingListItemsResponse")]
        System.IAsyncResult BeginGetShoppingListItems(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> EndGetShoppingListItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShoppingListService/GetShoppingListItemsForStore", ReplyAction="http://tempuri.org/IShoppingListService/GetShoppingListItemsForStoreResponse")]
        System.IAsyncResult BeginGetShoppingListItemsForStore(string store, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> EndGetShoppingListItemsForStore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShoppingListService/AddShoppingListItem", ReplyAction="http://tempuri.org/IShoppingListService/AddShoppingListItemResponse")]
        System.IAsyncResult BeginAddShoppingListItem(string store, string listItem, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.svc1.ShoppingListItem EndAddShoppingListItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShoppingListService/DeleteShoppingListItem", ReplyAction="http://tempuri.org/IShoppingListService/DeleteShoppingListItemResponse")]
        System.IAsyncResult BeginDeleteShoppingListItem(giesler.org.lists.svc1.ShoppingListItem listItem, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteShoppingListItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShoppingListService/UpdateShoppingListItem", ReplyAction="http://tempuri.org/IShoppingListService/UpdateShoppingListItemResponse")]
        System.IAsyncResult BeginUpdateShoppingListItem(giesler.org.lists.svc1.ShoppingListItem listItem, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateShoppingListItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IShoppingListService/GetMobileClientVersion", ReplyAction="http://tempuri.org/IShoppingListService/GetMobileClientVersionResponse")]
        System.IAsyncResult BeginGetMobileClientVersion(System.AsyncCallback callback, object asyncState);
        
        string EndGetMobileClientVersion(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShoppingListServiceChannel : giesler.org.lists.svc1.IShoppingListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShoppingListItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShoppingListItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetShoppingListItemsForStoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetShoppingListItemsForStoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddShoppingListItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddShoppingListItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.svc1.ShoppingListItem Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.svc1.ShoppingListItem)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMobileClientVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMobileClientVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShoppingListServiceClient : System.ServiceModel.ClientBase<giesler.org.lists.svc1.IShoppingListService>, giesler.org.lists.svc1.IShoppingListService {
        
        private BeginOperationDelegate onBeginGetStoresDelegate;
        
        private EndOperationDelegate onEndGetStoresDelegate;
        
        private System.Threading.SendOrPostCallback onGetStoresCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShoppingListItemsDelegate;
        
        private EndOperationDelegate onEndGetShoppingListItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetShoppingListItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetShoppingListItemsForStoreDelegate;
        
        private EndOperationDelegate onEndGetShoppingListItemsForStoreDelegate;
        
        private System.Threading.SendOrPostCallback onGetShoppingListItemsForStoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddShoppingListItemDelegate;
        
        private EndOperationDelegate onEndAddShoppingListItemDelegate;
        
        private System.Threading.SendOrPostCallback onAddShoppingListItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteShoppingListItemDelegate;
        
        private EndOperationDelegate onEndDeleteShoppingListItemDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteShoppingListItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateShoppingListItemDelegate;
        
        private EndOperationDelegate onEndUpdateShoppingListItemDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateShoppingListItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMobileClientVersionDelegate;
        
        private EndOperationDelegate onEndGetMobileClientVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetMobileClientVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ShoppingListServiceClient() {
        }
        
        public ShoppingListServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShoppingListServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShoppingListServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShoppingListServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetStoresCompletedEventArgs> GetStoresCompleted;
        
        public event System.EventHandler<GetShoppingListItemsCompletedEventArgs> GetShoppingListItemsCompleted;
        
        public event System.EventHandler<GetShoppingListItemsForStoreCompletedEventArgs> GetShoppingListItemsForStoreCompleted;
        
        public event System.EventHandler<AddShoppingListItemCompletedEventArgs> AddShoppingListItemCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteShoppingListItemCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateShoppingListItemCompleted;
        
        public event System.EventHandler<GetMobileClientVersionCompletedEventArgs> GetMobileClientVersionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.svc1.IShoppingListService.BeginGetStores(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStores(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> giesler.org.lists.svc1.IShoppingListService.EndGetStores(System.IAsyncResult result) {
            return base.Channel.EndGetStores(result);
        }
        
        private System.IAsyncResult OnBeginGetStores(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((giesler.org.lists.svc1.IShoppingListService)(this)).BeginGetStores(callback, asyncState);
        }
        
        private object[] OnEndGetStores(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((giesler.org.lists.svc1.IShoppingListService)(this)).EndGetStores(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStoresCompleted(object state) {
            if ((this.GetStoresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStoresCompleted(this, new GetStoresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStoresAsync() {
            this.GetStoresAsync(null);
        }
        
        public void GetStoresAsync(object userState) {
            if ((this.onBeginGetStoresDelegate == null)) {
                this.onBeginGetStoresDelegate = new BeginOperationDelegate(this.OnBeginGetStores);
            }
            if ((this.onEndGetStoresDelegate == null)) {
                this.onEndGetStoresDelegate = new EndOperationDelegate(this.OnEndGetStores);
            }
            if ((this.onGetStoresCompletedDelegate == null)) {
                this.onGetStoresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStoresCompleted);
            }
            base.InvokeAsync(this.onBeginGetStoresDelegate, null, this.onEndGetStoresDelegate, this.onGetStoresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.svc1.IShoppingListService.BeginGetShoppingListItems(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShoppingListItems(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> giesler.org.lists.svc1.IShoppingListService.EndGetShoppingListItems(System.IAsyncResult result) {
            return base.Channel.EndGetShoppingListItems(result);
        }
        
        private System.IAsyncResult OnBeginGetShoppingListItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((giesler.org.lists.svc1.IShoppingListService)(this)).BeginGetShoppingListItems(callback, asyncState);
        }
        
        private object[] OnEndGetShoppingListItems(System.IAsyncResult result) {
            System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> retVal = ((giesler.org.lists.svc1.IShoppingListService)(this)).EndGetShoppingListItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShoppingListItemsCompleted(object state) {
            if ((this.GetShoppingListItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShoppingListItemsCompleted(this, new GetShoppingListItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShoppingListItemsAsync() {
            this.GetShoppingListItemsAsync(null);
        }
        
        public void GetShoppingListItemsAsync(object userState) {
            if ((this.onBeginGetShoppingListItemsDelegate == null)) {
                this.onBeginGetShoppingListItemsDelegate = new BeginOperationDelegate(this.OnBeginGetShoppingListItems);
            }
            if ((this.onEndGetShoppingListItemsDelegate == null)) {
                this.onEndGetShoppingListItemsDelegate = new EndOperationDelegate(this.OnEndGetShoppingListItems);
            }
            if ((this.onGetShoppingListItemsCompletedDelegate == null)) {
                this.onGetShoppingListItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShoppingListItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetShoppingListItemsDelegate, null, this.onEndGetShoppingListItemsDelegate, this.onGetShoppingListItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.svc1.IShoppingListService.BeginGetShoppingListItemsForStore(string store, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetShoppingListItemsForStore(store, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> giesler.org.lists.svc1.IShoppingListService.EndGetShoppingListItemsForStore(System.IAsyncResult result) {
            return base.Channel.EndGetShoppingListItemsForStore(result);
        }
        
        private System.IAsyncResult OnBeginGetShoppingListItemsForStore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string store = ((string)(inValues[0]));
            return ((giesler.org.lists.svc1.IShoppingListService)(this)).BeginGetShoppingListItemsForStore(store, callback, asyncState);
        }
        
        private object[] OnEndGetShoppingListItemsForStore(System.IAsyncResult result) {
            System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> retVal = ((giesler.org.lists.svc1.IShoppingListService)(this)).EndGetShoppingListItemsForStore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetShoppingListItemsForStoreCompleted(object state) {
            if ((this.GetShoppingListItemsForStoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetShoppingListItemsForStoreCompleted(this, new GetShoppingListItemsForStoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetShoppingListItemsForStoreAsync(string store) {
            this.GetShoppingListItemsForStoreAsync(store, null);
        }
        
        public void GetShoppingListItemsForStoreAsync(string store, object userState) {
            if ((this.onBeginGetShoppingListItemsForStoreDelegate == null)) {
                this.onBeginGetShoppingListItemsForStoreDelegate = new BeginOperationDelegate(this.OnBeginGetShoppingListItemsForStore);
            }
            if ((this.onEndGetShoppingListItemsForStoreDelegate == null)) {
                this.onEndGetShoppingListItemsForStoreDelegate = new EndOperationDelegate(this.OnEndGetShoppingListItemsForStore);
            }
            if ((this.onGetShoppingListItemsForStoreCompletedDelegate == null)) {
                this.onGetShoppingListItemsForStoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetShoppingListItemsForStoreCompleted);
            }
            base.InvokeAsync(this.onBeginGetShoppingListItemsForStoreDelegate, new object[] {
                        store}, this.onEndGetShoppingListItemsForStoreDelegate, this.onGetShoppingListItemsForStoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.svc1.IShoppingListService.BeginAddShoppingListItem(string store, string listItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddShoppingListItem(store, listItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.svc1.ShoppingListItem giesler.org.lists.svc1.IShoppingListService.EndAddShoppingListItem(System.IAsyncResult result) {
            return base.Channel.EndAddShoppingListItem(result);
        }
        
        private System.IAsyncResult OnBeginAddShoppingListItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string store = ((string)(inValues[0]));
            string listItem = ((string)(inValues[1]));
            return ((giesler.org.lists.svc1.IShoppingListService)(this)).BeginAddShoppingListItem(store, listItem, callback, asyncState);
        }
        
        private object[] OnEndAddShoppingListItem(System.IAsyncResult result) {
            giesler.org.lists.svc1.ShoppingListItem retVal = ((giesler.org.lists.svc1.IShoppingListService)(this)).EndAddShoppingListItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddShoppingListItemCompleted(object state) {
            if ((this.AddShoppingListItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddShoppingListItemCompleted(this, new AddShoppingListItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddShoppingListItemAsync(string store, string listItem) {
            this.AddShoppingListItemAsync(store, listItem, null);
        }
        
        public void AddShoppingListItemAsync(string store, string listItem, object userState) {
            if ((this.onBeginAddShoppingListItemDelegate == null)) {
                this.onBeginAddShoppingListItemDelegate = new BeginOperationDelegate(this.OnBeginAddShoppingListItem);
            }
            if ((this.onEndAddShoppingListItemDelegate == null)) {
                this.onEndAddShoppingListItemDelegate = new EndOperationDelegate(this.OnEndAddShoppingListItem);
            }
            if ((this.onAddShoppingListItemCompletedDelegate == null)) {
                this.onAddShoppingListItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddShoppingListItemCompleted);
            }
            base.InvokeAsync(this.onBeginAddShoppingListItemDelegate, new object[] {
                        store,
                        listItem}, this.onEndAddShoppingListItemDelegate, this.onAddShoppingListItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.svc1.IShoppingListService.BeginDeleteShoppingListItem(giesler.org.lists.svc1.ShoppingListItem listItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteShoppingListItem(listItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void giesler.org.lists.svc1.IShoppingListService.EndDeleteShoppingListItem(System.IAsyncResult result) {
            base.Channel.EndDeleteShoppingListItem(result);
        }
        
        private System.IAsyncResult OnBeginDeleteShoppingListItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.svc1.ShoppingListItem listItem = ((giesler.org.lists.svc1.ShoppingListItem)(inValues[0]));
            return ((giesler.org.lists.svc1.IShoppingListService)(this)).BeginDeleteShoppingListItem(listItem, callback, asyncState);
        }
        
        private object[] OnEndDeleteShoppingListItem(System.IAsyncResult result) {
            ((giesler.org.lists.svc1.IShoppingListService)(this)).EndDeleteShoppingListItem(result);
            return null;
        }
        
        private void OnDeleteShoppingListItemCompleted(object state) {
            if ((this.DeleteShoppingListItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteShoppingListItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteShoppingListItemAsync(giesler.org.lists.svc1.ShoppingListItem listItem) {
            this.DeleteShoppingListItemAsync(listItem, null);
        }
        
        public void DeleteShoppingListItemAsync(giesler.org.lists.svc1.ShoppingListItem listItem, object userState) {
            if ((this.onBeginDeleteShoppingListItemDelegate == null)) {
                this.onBeginDeleteShoppingListItemDelegate = new BeginOperationDelegate(this.OnBeginDeleteShoppingListItem);
            }
            if ((this.onEndDeleteShoppingListItemDelegate == null)) {
                this.onEndDeleteShoppingListItemDelegate = new EndOperationDelegate(this.OnEndDeleteShoppingListItem);
            }
            if ((this.onDeleteShoppingListItemCompletedDelegate == null)) {
                this.onDeleteShoppingListItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteShoppingListItemCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteShoppingListItemDelegate, new object[] {
                        listItem}, this.onEndDeleteShoppingListItemDelegate, this.onDeleteShoppingListItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.svc1.IShoppingListService.BeginUpdateShoppingListItem(giesler.org.lists.svc1.ShoppingListItem listItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateShoppingListItem(listItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void giesler.org.lists.svc1.IShoppingListService.EndUpdateShoppingListItem(System.IAsyncResult result) {
            base.Channel.EndUpdateShoppingListItem(result);
        }
        
        private System.IAsyncResult OnBeginUpdateShoppingListItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.svc1.ShoppingListItem listItem = ((giesler.org.lists.svc1.ShoppingListItem)(inValues[0]));
            return ((giesler.org.lists.svc1.IShoppingListService)(this)).BeginUpdateShoppingListItem(listItem, callback, asyncState);
        }
        
        private object[] OnEndUpdateShoppingListItem(System.IAsyncResult result) {
            ((giesler.org.lists.svc1.IShoppingListService)(this)).EndUpdateShoppingListItem(result);
            return null;
        }
        
        private void OnUpdateShoppingListItemCompleted(object state) {
            if ((this.UpdateShoppingListItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateShoppingListItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateShoppingListItemAsync(giesler.org.lists.svc1.ShoppingListItem listItem) {
            this.UpdateShoppingListItemAsync(listItem, null);
        }
        
        public void UpdateShoppingListItemAsync(giesler.org.lists.svc1.ShoppingListItem listItem, object userState) {
            if ((this.onBeginUpdateShoppingListItemDelegate == null)) {
                this.onBeginUpdateShoppingListItemDelegate = new BeginOperationDelegate(this.OnBeginUpdateShoppingListItem);
            }
            if ((this.onEndUpdateShoppingListItemDelegate == null)) {
                this.onEndUpdateShoppingListItemDelegate = new EndOperationDelegate(this.OnEndUpdateShoppingListItem);
            }
            if ((this.onUpdateShoppingListItemCompletedDelegate == null)) {
                this.onUpdateShoppingListItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateShoppingListItemCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateShoppingListItemDelegate, new object[] {
                        listItem}, this.onEndUpdateShoppingListItemDelegate, this.onUpdateShoppingListItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.svc1.IShoppingListService.BeginGetMobileClientVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMobileClientVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string giesler.org.lists.svc1.IShoppingListService.EndGetMobileClientVersion(System.IAsyncResult result) {
            return base.Channel.EndGetMobileClientVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetMobileClientVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((giesler.org.lists.svc1.IShoppingListService)(this)).BeginGetMobileClientVersion(callback, asyncState);
        }
        
        private object[] OnEndGetMobileClientVersion(System.IAsyncResult result) {
            string retVal = ((giesler.org.lists.svc1.IShoppingListService)(this)).EndGetMobileClientVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMobileClientVersionCompleted(object state) {
            if ((this.GetMobileClientVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMobileClientVersionCompleted(this, new GetMobileClientVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMobileClientVersionAsync() {
            this.GetMobileClientVersionAsync(null);
        }
        
        public void GetMobileClientVersionAsync(object userState) {
            if ((this.onBeginGetMobileClientVersionDelegate == null)) {
                this.onBeginGetMobileClientVersionDelegate = new BeginOperationDelegate(this.OnBeginGetMobileClientVersion);
            }
            if ((this.onEndGetMobileClientVersionDelegate == null)) {
                this.onEndGetMobileClientVersionDelegate = new EndOperationDelegate(this.OnEndGetMobileClientVersion);
            }
            if ((this.onGetMobileClientVersionCompletedDelegate == null)) {
                this.onGetMobileClientVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMobileClientVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetMobileClientVersionDelegate, null, this.onEndGetMobileClientVersionDelegate, this.onGetMobileClientVersionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override giesler.org.lists.svc1.IShoppingListService CreateChannel() {
            return new ShoppingListServiceClientChannel(this);
        }
        
        private class ShoppingListServiceClientChannel : ChannelBase<giesler.org.lists.svc1.IShoppingListService>, giesler.org.lists.svc1.IShoppingListService {
            
            public ShoppingListServiceClientChannel(System.ServiceModel.ClientBase<giesler.org.lists.svc1.IShoppingListService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetStores(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStores", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndGetStores(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("GetStores", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShoppingListItems(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetShoppingListItems", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> EndGetShoppingListItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> _result = ((System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem>)(base.EndInvoke("GetShoppingListItems", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetShoppingListItemsForStore(string store, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = store;
                System.IAsyncResult _result = base.BeginInvoke("GetShoppingListItemsForStore", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> EndGetShoppingListItemsForStore(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem> _result = ((System.Collections.Generic.List<giesler.org.lists.svc1.ShoppingListItem>)(base.EndInvoke("GetShoppingListItemsForStore", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddShoppingListItem(string store, string listItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = store;
                _args[1] = listItem;
                System.IAsyncResult _result = base.BeginInvoke("AddShoppingListItem", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.svc1.ShoppingListItem EndAddShoppingListItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.svc1.ShoppingListItem _result = ((giesler.org.lists.svc1.ShoppingListItem)(base.EndInvoke("AddShoppingListItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteShoppingListItem(giesler.org.lists.svc1.ShoppingListItem listItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = listItem;
                System.IAsyncResult _result = base.BeginInvoke("DeleteShoppingListItem", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteShoppingListItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteShoppingListItem", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateShoppingListItem(giesler.org.lists.svc1.ShoppingListItem listItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = listItem;
                System.IAsyncResult _result = base.BeginInvoke("UpdateShoppingListItem", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateShoppingListItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateShoppingListItem", _args, result);
            }
            
            public System.IAsyncResult BeginGetMobileClientVersion(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMobileClientVersion", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetMobileClientVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetMobileClientVersion", _args, result)));
                return _result;
            }
        }
    }
}
