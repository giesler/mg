//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace giesler.org.lists.ListAuth {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class Person : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private string LiveUserIdField;
        
        private System.Guid UniqueIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<giesler.org.lists.ListAuth.ListPerson> ListPersonsField;
        
        private System.Collections.ObjectModel.ObservableCollection<giesler.org.lists.ListAuth.ListItem> ListItemsField;
        
        private System.Collections.ObjectModel.ObservableCollection<giesler.org.lists.ListAuth.ListItem> ListItems1Field;
        
        private System.Collections.ObjectModel.ObservableCollection<giesler.org.lists.ListAuth.PersonDevice> PersonDevicesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string LiveUserId {
            get {
                return this.LiveUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LiveUserIdField, value) != true)) {
                    this.LiveUserIdField = value;
                    this.RaisePropertyChanged("LiveUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Collections.ObjectModel.ObservableCollection<giesler.org.lists.ListAuth.ListPerson> ListPersons {
            get {
                return this.ListPersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListPersonsField, value) != true)) {
                    this.ListPersonsField = value;
                    this.RaisePropertyChanged("ListPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Collections.ObjectModel.ObservableCollection<giesler.org.lists.ListAuth.ListItem> ListItems {
            get {
                return this.ListItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemsField, value) != true)) {
                    this.ListItemsField = value;
                    this.RaisePropertyChanged("ListItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Collections.ObjectModel.ObservableCollection<giesler.org.lists.ListAuth.ListItem> ListItems1 {
            get {
                return this.ListItems1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListItems1Field, value) != true)) {
                    this.ListItems1Field = value;
                    this.RaisePropertyChanged("ListItems1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.ObjectModel.ObservableCollection<giesler.org.lists.ListAuth.PersonDevice> PersonDevices {
            get {
                return this.PersonDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonDevicesField, value) != true)) {
                    this.PersonDevicesField = value;
                    this.RaisePropertyChanged("PersonDevices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListPerson", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class ListPerson : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ListIdField;
        
        private int PersonIdField;
        
        private System.DateTime AddedTimeField;
        
        private bool IsAcceptedField;
        
        private bool IsListOwnerField;
        
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ListId {
            get {
                return this.ListIdField;
            }
            set {
                if ((this.ListIdField.Equals(value) != true)) {
                    this.ListIdField = value;
                    this.RaisePropertyChanged("ListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime AddedTime {
            get {
                return this.AddedTimeField;
            }
            set {
                if ((this.AddedTimeField.Equals(value) != true)) {
                    this.AddedTimeField = value;
                    this.RaisePropertyChanged("AddedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsAccepted {
            get {
                return this.IsAcceptedField;
            }
            set {
                if ((this.IsAcceptedField.Equals(value) != true)) {
                    this.IsAcceptedField = value;
                    this.RaisePropertyChanged("IsAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool IsListOwner {
            get {
                return this.IsListOwnerField;
            }
            set {
                if ((this.IsListOwnerField.Equals(value) != true)) {
                    this.IsListOwnerField = value;
                    this.RaisePropertyChanged("IsListOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListItem", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class ListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private int ListIdField;
        
        private string NameField;
        
        private int AddedByPersonIdField;
        
        private System.DateTime AddedTimeField;
        
        private System.DateTime ChangedTimeField;
        
        private int ChangeDeviceIdField;
        
        private bool IsDeletedField;
        
        private System.Nullable<System.DateTime> DeletedTimeField;
        
        private System.Nullable<int> DeletedByPersonIdField;
        
        private System.Guid UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ListId {
            get {
                return this.ListIdField;
            }
            set {
                if ((this.ListIdField.Equals(value) != true)) {
                    this.ListIdField = value;
                    this.RaisePropertyChanged("ListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int AddedByPersonId {
            get {
                return this.AddedByPersonIdField;
            }
            set {
                if ((this.AddedByPersonIdField.Equals(value) != true)) {
                    this.AddedByPersonIdField = value;
                    this.RaisePropertyChanged("AddedByPersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime AddedTime {
            get {
                return this.AddedTimeField;
            }
            set {
                if ((this.AddedTimeField.Equals(value) != true)) {
                    this.AddedTimeField = value;
                    this.RaisePropertyChanged("AddedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.DateTime ChangedTime {
            get {
                return this.ChangedTimeField;
            }
            set {
                if ((this.ChangedTimeField.Equals(value) != true)) {
                    this.ChangedTimeField = value;
                    this.RaisePropertyChanged("ChangedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int ChangeDeviceId {
            get {
                return this.ChangeDeviceIdField;
            }
            set {
                if ((this.ChangeDeviceIdField.Equals(value) != true)) {
                    this.ChangeDeviceIdField = value;
                    this.RaisePropertyChanged("ChangeDeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<System.DateTime> DeletedTime {
            get {
                return this.DeletedTimeField;
            }
            set {
                if ((this.DeletedTimeField.Equals(value) != true)) {
                    this.DeletedTimeField = value;
                    this.RaisePropertyChanged("DeletedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<int> DeletedByPersonId {
            get {
                return this.DeletedByPersonIdField;
            }
            set {
                if ((this.DeletedByPersonIdField.Equals(value) != true)) {
                    this.DeletedByPersonIdField = value;
                    this.RaisePropertyChanged("DeletedByPersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDevice", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class PersonDevice : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private int PersonIdField;
        
        private string NameField;
        
        private System.DateTime LastConnectTimeField;
        
        private System.Guid UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime LastConnectTime {
            get {
                return this.LastConnectTimeField;
            }
            set {
                if ((this.LastConnectTimeField.Equals(value) != true)) {
                    this.LastConnectTimeField = value;
                    this.RaisePropertyChanged("LastConnectTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientAuthenticationData", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class ClientAuthenticationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid DeviceUniqueIdField;
        
        private System.Guid PersonUniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceUniqueId {
            get {
                return this.DeviceUniqueIdField;
            }
            set {
                if ((this.DeviceUniqueIdField.Equals(value) != true)) {
                    this.DeviceUniqueIdField = value;
                    this.RaisePropertyChanged("DeviceUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonUniqueId {
            get {
                return this.PersonUniqueIdField;
            }
            set {
                if ((this.PersonUniqueIdField.Equals(value) != true)) {
                    this.PersonUniqueIdField = value;
                    this.RaisePropertyChanged("PersonUniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ListAuth.IListAuthentication")]
    public interface IListAuthentication {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IListAuthentication/GetPerson", ReplyAction="http://tempuri.org/IListAuthentication/GetPersonResponse")]
        System.IAsyncResult BeginGetPerson(string liveUserId, string name, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListAuth.Person EndGetPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IListAuthentication/UpdatePerson", ReplyAction="http://tempuri.org/IListAuthentication/UpdatePersonResponse")]
        System.IAsyncResult BeginUpdatePerson(giesler.org.lists.ListAuth.ClientAuthenticationData auth, giesler.org.lists.ListAuth.Person person, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IListAuthentication/AddDevice", ReplyAction="http://tempuri.org/IListAuthentication/AddDeviceResponse")]
        System.IAsyncResult BeginAddDevice(giesler.org.lists.ListAuth.ClientAuthenticationData auth, string deviceName, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListAuth.PersonDevice EndAddDevice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IListAuthentication/RemoveDevice", ReplyAction="http://tempuri.org/IListAuthentication/RemoveDeviceResponse")]
        System.IAsyncResult BeginRemoveDevice(giesler.org.lists.ListAuth.ClientAuthenticationData auth, System.Guid deviceId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveDevice(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IListAuthenticationChannel : giesler.org.lists.ListAuth.IListAuthentication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListAuth.Person Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListAuth.Person)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListAuth.PersonDevice Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListAuth.PersonDevice)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListAuthenticationClient : System.ServiceModel.ClientBase<giesler.org.lists.ListAuth.IListAuthentication>, giesler.org.lists.ListAuth.IListAuthentication {
        
        private BeginOperationDelegate onBeginGetPersonDelegate;
        
        private EndOperationDelegate onEndGetPersonDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePersonDelegate;
        
        private EndOperationDelegate onEndUpdatePersonDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDeviceDelegate;
        
        private EndOperationDelegate onEndAddDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onAddDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveDeviceDelegate;
        
        private EndOperationDelegate onEndRemoveDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ListAuthenticationClient() {
        }
        
        public ListAuthenticationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ListAuthenticationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ListAuthenticationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ListAuthenticationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetPersonCompletedEventArgs> GetPersonCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePersonCompleted;
        
        public event System.EventHandler<AddDeviceCompletedEventArgs> AddDeviceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveDeviceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListAuth.IListAuthentication.BeginGetPerson(string liveUserId, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerson(liveUserId, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListAuth.Person giesler.org.lists.ListAuth.IListAuthentication.EndGetPerson(System.IAsyncResult result) {
            return base.Channel.EndGetPerson(result);
        }
        
        private System.IAsyncResult OnBeginGetPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string liveUserId = ((string)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((giesler.org.lists.ListAuth.IListAuthentication)(this)).BeginGetPerson(liveUserId, name, callback, asyncState);
        }
        
        private object[] OnEndGetPerson(System.IAsyncResult result) {
            giesler.org.lists.ListAuth.Person retVal = ((giesler.org.lists.ListAuth.IListAuthentication)(this)).EndGetPerson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonCompleted(object state) {
            if ((this.GetPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonCompleted(this, new GetPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonAsync(string liveUserId, string name) {
            this.GetPersonAsync(liveUserId, name, null);
        }
        
        public void GetPersonAsync(string liveUserId, string name, object userState) {
            if ((this.onBeginGetPersonDelegate == null)) {
                this.onBeginGetPersonDelegate = new BeginOperationDelegate(this.OnBeginGetPerson);
            }
            if ((this.onEndGetPersonDelegate == null)) {
                this.onEndGetPersonDelegate = new EndOperationDelegate(this.OnEndGetPerson);
            }
            if ((this.onGetPersonCompletedDelegate == null)) {
                this.onGetPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonDelegate, new object[] {
                        liveUserId,
                        name}, this.onEndGetPersonDelegate, this.onGetPersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListAuth.IListAuthentication.BeginUpdatePerson(giesler.org.lists.ListAuth.ClientAuthenticationData auth, giesler.org.lists.ListAuth.Person person, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePerson(auth, person, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void giesler.org.lists.ListAuth.IListAuthentication.EndUpdatePerson(System.IAsyncResult result) {
            base.Channel.EndUpdatePerson(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListAuth.ClientAuthenticationData auth = ((giesler.org.lists.ListAuth.ClientAuthenticationData)(inValues[0]));
            giesler.org.lists.ListAuth.Person person = ((giesler.org.lists.ListAuth.Person)(inValues[1]));
            return ((giesler.org.lists.ListAuth.IListAuthentication)(this)).BeginUpdatePerson(auth, person, callback, asyncState);
        }
        
        private object[] OnEndUpdatePerson(System.IAsyncResult result) {
            ((giesler.org.lists.ListAuth.IListAuthentication)(this)).EndUpdatePerson(result);
            return null;
        }
        
        private void OnUpdatePersonCompleted(object state) {
            if ((this.UpdatePersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePersonAsync(giesler.org.lists.ListAuth.ClientAuthenticationData auth, giesler.org.lists.ListAuth.Person person) {
            this.UpdatePersonAsync(auth, person, null);
        }
        
        public void UpdatePersonAsync(giesler.org.lists.ListAuth.ClientAuthenticationData auth, giesler.org.lists.ListAuth.Person person, object userState) {
            if ((this.onBeginUpdatePersonDelegate == null)) {
                this.onBeginUpdatePersonDelegate = new BeginOperationDelegate(this.OnBeginUpdatePerson);
            }
            if ((this.onEndUpdatePersonDelegate == null)) {
                this.onEndUpdatePersonDelegate = new EndOperationDelegate(this.OnEndUpdatePerson);
            }
            if ((this.onUpdatePersonCompletedDelegate == null)) {
                this.onUpdatePersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePersonCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePersonDelegate, new object[] {
                        auth,
                        person}, this.onEndUpdatePersonDelegate, this.onUpdatePersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListAuth.IListAuthentication.BeginAddDevice(giesler.org.lists.ListAuth.ClientAuthenticationData auth, string deviceName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddDevice(auth, deviceName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListAuth.PersonDevice giesler.org.lists.ListAuth.IListAuthentication.EndAddDevice(System.IAsyncResult result) {
            return base.Channel.EndAddDevice(result);
        }
        
        private System.IAsyncResult OnBeginAddDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListAuth.ClientAuthenticationData auth = ((giesler.org.lists.ListAuth.ClientAuthenticationData)(inValues[0]));
            string deviceName = ((string)(inValues[1]));
            return ((giesler.org.lists.ListAuth.IListAuthentication)(this)).BeginAddDevice(auth, deviceName, callback, asyncState);
        }
        
        private object[] OnEndAddDevice(System.IAsyncResult result) {
            giesler.org.lists.ListAuth.PersonDevice retVal = ((giesler.org.lists.ListAuth.IListAuthentication)(this)).EndAddDevice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddDeviceCompleted(object state) {
            if ((this.AddDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddDeviceCompleted(this, new AddDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddDeviceAsync(giesler.org.lists.ListAuth.ClientAuthenticationData auth, string deviceName) {
            this.AddDeviceAsync(auth, deviceName, null);
        }
        
        public void AddDeviceAsync(giesler.org.lists.ListAuth.ClientAuthenticationData auth, string deviceName, object userState) {
            if ((this.onBeginAddDeviceDelegate == null)) {
                this.onBeginAddDeviceDelegate = new BeginOperationDelegate(this.OnBeginAddDevice);
            }
            if ((this.onEndAddDeviceDelegate == null)) {
                this.onEndAddDeviceDelegate = new EndOperationDelegate(this.OnEndAddDevice);
            }
            if ((this.onAddDeviceCompletedDelegate == null)) {
                this.onAddDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginAddDeviceDelegate, new object[] {
                        auth,
                        deviceName}, this.onEndAddDeviceDelegate, this.onAddDeviceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListAuth.IListAuthentication.BeginRemoveDevice(giesler.org.lists.ListAuth.ClientAuthenticationData auth, System.Guid deviceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveDevice(auth, deviceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void giesler.org.lists.ListAuth.IListAuthentication.EndRemoveDevice(System.IAsyncResult result) {
            base.Channel.EndRemoveDevice(result);
        }
        
        private System.IAsyncResult OnBeginRemoveDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListAuth.ClientAuthenticationData auth = ((giesler.org.lists.ListAuth.ClientAuthenticationData)(inValues[0]));
            System.Guid deviceId = ((System.Guid)(inValues[1]));
            return ((giesler.org.lists.ListAuth.IListAuthentication)(this)).BeginRemoveDevice(auth, deviceId, callback, asyncState);
        }
        
        private object[] OnEndRemoveDevice(System.IAsyncResult result) {
            ((giesler.org.lists.ListAuth.IListAuthentication)(this)).EndRemoveDevice(result);
            return null;
        }
        
        private void OnRemoveDeviceCompleted(object state) {
            if ((this.RemoveDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveDeviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveDeviceAsync(giesler.org.lists.ListAuth.ClientAuthenticationData auth, System.Guid deviceId) {
            this.RemoveDeviceAsync(auth, deviceId, null);
        }
        
        public void RemoveDeviceAsync(giesler.org.lists.ListAuth.ClientAuthenticationData auth, System.Guid deviceId, object userState) {
            if ((this.onBeginRemoveDeviceDelegate == null)) {
                this.onBeginRemoveDeviceDelegate = new BeginOperationDelegate(this.OnBeginRemoveDevice);
            }
            if ((this.onEndRemoveDeviceDelegate == null)) {
                this.onEndRemoveDeviceDelegate = new EndOperationDelegate(this.OnEndRemoveDevice);
            }
            if ((this.onRemoveDeviceCompletedDelegate == null)) {
                this.onRemoveDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveDeviceDelegate, new object[] {
                        auth,
                        deviceId}, this.onEndRemoveDeviceDelegate, this.onRemoveDeviceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override giesler.org.lists.ListAuth.IListAuthentication CreateChannel() {
            return new ListAuthenticationClientChannel(this);
        }
        
        private class ListAuthenticationClientChannel : ChannelBase<giesler.org.lists.ListAuth.IListAuthentication>, giesler.org.lists.ListAuth.IListAuthentication {
            
            public ListAuthenticationClientChannel(System.ServiceModel.ClientBase<giesler.org.lists.ListAuth.IListAuthentication> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetPerson(string liveUserId, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = liveUserId;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetPerson", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListAuth.Person EndGetPerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListAuth.Person _result = ((giesler.org.lists.ListAuth.Person)(base.EndInvoke("GetPerson", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePerson(giesler.org.lists.ListAuth.ClientAuthenticationData auth, giesler.org.lists.ListAuth.Person person, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = person;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePerson", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdatePerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdatePerson", _args, result);
            }
            
            public System.IAsyncResult BeginAddDevice(giesler.org.lists.ListAuth.ClientAuthenticationData auth, string deviceName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = deviceName;
                System.IAsyncResult _result = base.BeginInvoke("AddDevice", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListAuth.PersonDevice EndAddDevice(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListAuth.PersonDevice _result = ((giesler.org.lists.ListAuth.PersonDevice)(base.EndInvoke("AddDevice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveDevice(giesler.org.lists.ListAuth.ClientAuthenticationData auth, System.Guid deviceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = deviceId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveDevice", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveDevice(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveDevice", _args, result);
            }
        }
    }
}
