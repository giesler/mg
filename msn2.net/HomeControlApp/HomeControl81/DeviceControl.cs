/*
 * Created with:
 * c:\Program Files (x86)\Microsoft SDKs\Windows Phone\v8.1\Tools\SlSvcUtil.exe 
 *  http://hs.msn2.net:8808/DeviceControl.svc /edb /n:*,HomeControl81.DeviceControl
 */
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 3.7.0.0
// 
namespace HomeControl81.DeviceControl
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DeviceStatus", Namespace = "http://schemas.datacontract.org/2004/07/HomeServices")]
    public partial class DeviceStatus : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string HistoryField;

        private bool IsOnField;

        private string StatusTextField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string History
        {
            get
            {
                return this.HistoryField;
            }
            set
            {
                if ((object.ReferenceEquals(this.HistoryField, value) != true))
                {
                    this.HistoryField = value;
                    this.RaisePropertyChanged("History");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOn
        {
            get
            {
                return this.IsOnField;
            }
            set
            {
                if ((this.IsOnField.Equals(value) != true))
                {
                    this.IsOnField = value;
                    this.RaisePropertyChanged("IsOn");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusText
        {
            get
            {
                return this.StatusTextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.StatusTextField, value) != true))
                {
                    this.StatusTextField = value;
                    this.RaisePropertyChanged("StatusText");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "HomeControl81.DeviceControl.IDeviceControl")]
    public interface IDeviceControl
    {

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IDeviceControl/ToggleDevice", ReplyAction = "http://tempuri.org/IDeviceControl/ToggleDeviceResponse")]
        System.IAsyncResult BeginToggleDevice(string name, System.AsyncCallback callback, object asyncState);

        HomeControl81.DeviceControl.DeviceStatus EndToggleDevice(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IDeviceControl/GetDeviceStatus", ReplyAction = "http://tempuri.org/IDeviceControl/GetDeviceStatusResponse")]
        System.IAsyncResult BeginGetDeviceStatus(string name, System.AsyncCallback callback, object asyncState);

        HomeControl81.DeviceControl.DeviceStatus EndGetDeviceStatus(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IDeviceControl/TurnOff", ReplyAction = "http://tempuri.org/IDeviceControl/TurnOffResponse")]
        System.IAsyncResult BeginTurnOff(string name, System.AsyncCallback callback, object asyncState);

        HomeControl81.DeviceControl.DeviceStatus EndTurnOff(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IDeviceControl/TurnOn", ReplyAction = "http://tempuri.org/IDeviceControl/TurnOnResponse")]
        System.IAsyncResult BeginTurnOn(string name, System.TimeSpan duration, System.AsyncCallback callback, object asyncState);

        HomeControl81.DeviceControl.DeviceStatus EndTurnOn(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IDeviceControl/GetDeviceHistory", ReplyAction = "http://tempuri.org/IDeviceControl/GetDeviceHistoryResponse")]
        System.IAsyncResult BeginGetDeviceHistory(string name, System.AsyncCallback callback, object asyncState);

        string EndGetDeviceHistory(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceControlChannel : HomeControl81.DeviceControl.IDeviceControl, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ToggleDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public ToggleDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public HomeControl81.DeviceControl.DeviceStatus Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((HomeControl81.DeviceControl.DeviceStatus)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetDeviceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public HomeControl81.DeviceControl.DeviceStatus Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((HomeControl81.DeviceControl.DeviceStatus)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TurnOffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public TurnOffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public HomeControl81.DeviceControl.DeviceStatus Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((HomeControl81.DeviceControl.DeviceStatus)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TurnOnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public TurnOnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public HomeControl81.DeviceControl.DeviceStatus Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((HomeControl81.DeviceControl.DeviceStatus)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetDeviceHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceControlClient : System.ServiceModel.ClientBase<HomeControl81.DeviceControl.IDeviceControl>, HomeControl81.DeviceControl.IDeviceControl
    {

        private BeginOperationDelegate onBeginToggleDeviceDelegate;

        private EndOperationDelegate onEndToggleDeviceDelegate;

        private System.Threading.SendOrPostCallback onToggleDeviceCompletedDelegate;

        private BeginOperationDelegate onBeginGetDeviceStatusDelegate;

        private EndOperationDelegate onEndGetDeviceStatusDelegate;

        private System.Threading.SendOrPostCallback onGetDeviceStatusCompletedDelegate;

        private BeginOperationDelegate onBeginTurnOffDelegate;

        private EndOperationDelegate onEndTurnOffDelegate;

        private System.Threading.SendOrPostCallback onTurnOffCompletedDelegate;

        private BeginOperationDelegate onBeginTurnOnDelegate;

        private EndOperationDelegate onEndTurnOnDelegate;

        private System.Threading.SendOrPostCallback onTurnOnCompletedDelegate;

        private BeginOperationDelegate onBeginGetDeviceHistoryDelegate;

        private EndOperationDelegate onEndGetDeviceHistoryDelegate;

        private System.Threading.SendOrPostCallback onGetDeviceHistoryCompletedDelegate;

        private BeginOperationDelegate onBeginOpenDelegate;

        private EndOperationDelegate onEndOpenDelegate;

        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

        private BeginOperationDelegate onBeginCloseDelegate;

        private EndOperationDelegate onEndCloseDelegate;

        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

        public DeviceControlClient()
        {
        }

        public DeviceControlClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public DeviceControlClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public DeviceControlClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public DeviceControlClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }

        public event System.EventHandler<ToggleDeviceCompletedEventArgs> ToggleDeviceCompleted;

        public event System.EventHandler<GetDeviceStatusCompletedEventArgs> GetDeviceStatusCompleted;

        public event System.EventHandler<TurnOffCompletedEventArgs> TurnOffCompleted;

        public event System.EventHandler<TurnOnCompletedEventArgs> TurnOnCompleted;

        public event System.EventHandler<GetDeviceHistoryCompletedEventArgs> GetDeviceHistoryCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HomeControl81.DeviceControl.IDeviceControl.BeginToggleDevice(string name, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginToggleDevice(name, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HomeControl81.DeviceControl.DeviceStatus HomeControl81.DeviceControl.IDeviceControl.EndToggleDevice(System.IAsyncResult result)
        {
            return base.Channel.EndToggleDevice(result);
        }

        private System.IAsyncResult OnBeginToggleDevice(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string name = ((string)(inValues[0]));
            return ((HomeControl81.DeviceControl.IDeviceControl)(this)).BeginToggleDevice(name, callback, asyncState);
        }

        private object[] OnEndToggleDevice(System.IAsyncResult result)
        {
            HomeControl81.DeviceControl.DeviceStatus retVal = ((HomeControl81.DeviceControl.IDeviceControl)(this)).EndToggleDevice(result);
            return new object[] {
                    retVal};
        }

        private void OnToggleDeviceCompleted(object state)
        {
            if ((this.ToggleDeviceCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ToggleDeviceCompleted(this, new ToggleDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ToggleDeviceAsync(string name)
        {
            this.ToggleDeviceAsync(name, null);
        }

        public void ToggleDeviceAsync(string name, object userState)
        {
            if ((this.onBeginToggleDeviceDelegate == null))
            {
                this.onBeginToggleDeviceDelegate = new BeginOperationDelegate(this.OnBeginToggleDevice);
            }
            if ((this.onEndToggleDeviceDelegate == null))
            {
                this.onEndToggleDeviceDelegate = new EndOperationDelegate(this.OnEndToggleDevice);
            }
            if ((this.onToggleDeviceCompletedDelegate == null))
            {
                this.onToggleDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnToggleDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginToggleDeviceDelegate, new object[] {
                        name}, this.onEndToggleDeviceDelegate, this.onToggleDeviceCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HomeControl81.DeviceControl.IDeviceControl.BeginGetDeviceStatus(string name, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetDeviceStatus(name, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HomeControl81.DeviceControl.DeviceStatus HomeControl81.DeviceControl.IDeviceControl.EndGetDeviceStatus(System.IAsyncResult result)
        {
            return base.Channel.EndGetDeviceStatus(result);
        }

        private System.IAsyncResult OnBeginGetDeviceStatus(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string name = ((string)(inValues[0]));
            return ((HomeControl81.DeviceControl.IDeviceControl)(this)).BeginGetDeviceStatus(name, callback, asyncState);
        }

        private object[] OnEndGetDeviceStatus(System.IAsyncResult result)
        {
            HomeControl81.DeviceControl.DeviceStatus retVal = ((HomeControl81.DeviceControl.IDeviceControl)(this)).EndGetDeviceStatus(result);
            return new object[] {
                    retVal};
        }

        private void OnGetDeviceStatusCompleted(object state)
        {
            if ((this.GetDeviceStatusCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceStatusCompleted(this, new GetDeviceStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetDeviceStatusAsync(string name)
        {
            this.GetDeviceStatusAsync(name, null);
        }

        public void GetDeviceStatusAsync(string name, object userState)
        {
            if ((this.onBeginGetDeviceStatusDelegate == null))
            {
                this.onBeginGetDeviceStatusDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceStatus);
            }
            if ((this.onEndGetDeviceStatusDelegate == null))
            {
                this.onEndGetDeviceStatusDelegate = new EndOperationDelegate(this.OnEndGetDeviceStatus);
            }
            if ((this.onGetDeviceStatusCompletedDelegate == null))
            {
                this.onGetDeviceStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceStatusDelegate, new object[] {
                        name}, this.onEndGetDeviceStatusDelegate, this.onGetDeviceStatusCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HomeControl81.DeviceControl.IDeviceControl.BeginTurnOff(string name, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginTurnOff(name, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HomeControl81.DeviceControl.DeviceStatus HomeControl81.DeviceControl.IDeviceControl.EndTurnOff(System.IAsyncResult result)
        {
            return base.Channel.EndTurnOff(result);
        }

        private System.IAsyncResult OnBeginTurnOff(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string name = ((string)(inValues[0]));
            return ((HomeControl81.DeviceControl.IDeviceControl)(this)).BeginTurnOff(name, callback, asyncState);
        }

        private object[] OnEndTurnOff(System.IAsyncResult result)
        {
            HomeControl81.DeviceControl.DeviceStatus retVal = ((HomeControl81.DeviceControl.IDeviceControl)(this)).EndTurnOff(result);
            return new object[] {
                    retVal};
        }

        private void OnTurnOffCompleted(object state)
        {
            if ((this.TurnOffCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TurnOffCompleted(this, new TurnOffCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void TurnOffAsync(string name)
        {
            this.TurnOffAsync(name, null);
        }

        public void TurnOffAsync(string name, object userState)
        {
            if ((this.onBeginTurnOffDelegate == null))
            {
                this.onBeginTurnOffDelegate = new BeginOperationDelegate(this.OnBeginTurnOff);
            }
            if ((this.onEndTurnOffDelegate == null))
            {
                this.onEndTurnOffDelegate = new EndOperationDelegate(this.OnEndTurnOff);
            }
            if ((this.onTurnOffCompletedDelegate == null))
            {
                this.onTurnOffCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTurnOffCompleted);
            }
            base.InvokeAsync(this.onBeginTurnOffDelegate, new object[] {
                        name}, this.onEndTurnOffDelegate, this.onTurnOffCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HomeControl81.DeviceControl.IDeviceControl.BeginTurnOn(string name, System.TimeSpan duration, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginTurnOn(name, duration, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HomeControl81.DeviceControl.DeviceStatus HomeControl81.DeviceControl.IDeviceControl.EndTurnOn(System.IAsyncResult result)
        {
            return base.Channel.EndTurnOn(result);
        }

        private System.IAsyncResult OnBeginTurnOn(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string name = ((string)(inValues[0]));
            System.TimeSpan duration = ((System.TimeSpan)(inValues[1]));
            return ((HomeControl81.DeviceControl.IDeviceControl)(this)).BeginTurnOn(name, duration, callback, asyncState);
        }

        private object[] OnEndTurnOn(System.IAsyncResult result)
        {
            HomeControl81.DeviceControl.DeviceStatus retVal = ((HomeControl81.DeviceControl.IDeviceControl)(this)).EndTurnOn(result);
            return new object[] {
                    retVal};
        }

        private void OnTurnOnCompleted(object state)
        {
            if ((this.TurnOnCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TurnOnCompleted(this, new TurnOnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void TurnOnAsync(string name, System.TimeSpan duration)
        {
            this.TurnOnAsync(name, duration, null);
        }

        public void TurnOnAsync(string name, System.TimeSpan duration, object userState)
        {
            if ((this.onBeginTurnOnDelegate == null))
            {
                this.onBeginTurnOnDelegate = new BeginOperationDelegate(this.OnBeginTurnOn);
            }
            if ((this.onEndTurnOnDelegate == null))
            {
                this.onEndTurnOnDelegate = new EndOperationDelegate(this.OnEndTurnOn);
            }
            if ((this.onTurnOnCompletedDelegate == null))
            {
                this.onTurnOnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTurnOnCompleted);
            }
            base.InvokeAsync(this.onBeginTurnOnDelegate, new object[] {
                        name,
                        duration}, this.onEndTurnOnDelegate, this.onTurnOnCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HomeControl81.DeviceControl.IDeviceControl.BeginGetDeviceHistory(string name, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetDeviceHistory(name, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HomeControl81.DeviceControl.IDeviceControl.EndGetDeviceHistory(System.IAsyncResult result)
        {
            return base.Channel.EndGetDeviceHistory(result);
        }

        private System.IAsyncResult OnBeginGetDeviceHistory(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string name = ((string)(inValues[0]));
            return ((HomeControl81.DeviceControl.IDeviceControl)(this)).BeginGetDeviceHistory(name, callback, asyncState);
        }

        private object[] OnEndGetDeviceHistory(System.IAsyncResult result)
        {
            string retVal = ((HomeControl81.DeviceControl.IDeviceControl)(this)).EndGetDeviceHistory(result);
            return new object[] {
                    retVal};
        }

        private void OnGetDeviceHistoryCompleted(object state)
        {
            if ((this.GetDeviceHistoryCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceHistoryCompleted(this, new GetDeviceHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetDeviceHistoryAsync(string name)
        {
            this.GetDeviceHistoryAsync(name, null);
        }

        public void GetDeviceHistoryAsync(string name, object userState)
        {
            if ((this.onBeginGetDeviceHistoryDelegate == null))
            {
                this.onBeginGetDeviceHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceHistory);
            }
            if ((this.onEndGetDeviceHistoryDelegate == null))
            {
                this.onEndGetDeviceHistoryDelegate = new EndOperationDelegate(this.OnEndGetDeviceHistory);
            }
            if ((this.onGetDeviceHistoryCompletedDelegate == null))
            {
                this.onGetDeviceHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceHistoryDelegate, new object[] {
                        name}, this.onEndGetDeviceHistoryDelegate, this.onGetDeviceHistoryCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void OpenAsync()
        {
            this.OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null))
            {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null))
            {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null))
            {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CloseAsync()
        {
            this.CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null))
            {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null))
            {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null))
            {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }

        protected override HomeControl81.DeviceControl.IDeviceControl CreateChannel()
        {
            return new DeviceControlClientChannel(this);
        }

        private class DeviceControlClientChannel : ChannelBase<HomeControl81.DeviceControl.IDeviceControl>, HomeControl81.DeviceControl.IDeviceControl
        {

            public DeviceControlClientChannel(System.ServiceModel.ClientBase<HomeControl81.DeviceControl.IDeviceControl> client) :
                base(client)
            {
            }

            public System.IAsyncResult BeginToggleDevice(string name, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("ToggleDevice", _args, callback, asyncState);
                return _result;
            }

            public HomeControl81.DeviceControl.DeviceStatus EndToggleDevice(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                HomeControl81.DeviceControl.DeviceStatus _result = ((HomeControl81.DeviceControl.DeviceStatus)(base.EndInvoke("ToggleDevice", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetDeviceStatus(string name, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetDeviceStatus", _args, callback, asyncState);
                return _result;
            }

            public HomeControl81.DeviceControl.DeviceStatus EndGetDeviceStatus(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                HomeControl81.DeviceControl.DeviceStatus _result = ((HomeControl81.DeviceControl.DeviceStatus)(base.EndInvoke("GetDeviceStatus", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginTurnOff(string name, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("TurnOff", _args, callback, asyncState);
                return _result;
            }

            public HomeControl81.DeviceControl.DeviceStatus EndTurnOff(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                HomeControl81.DeviceControl.DeviceStatus _result = ((HomeControl81.DeviceControl.DeviceStatus)(base.EndInvoke("TurnOff", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginTurnOn(string name, System.TimeSpan duration, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = duration;
                System.IAsyncResult _result = base.BeginInvoke("TurnOn", _args, callback, asyncState);
                return _result;
            }

            public HomeControl81.DeviceControl.DeviceStatus EndTurnOn(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                HomeControl81.DeviceControl.DeviceStatus _result = ((HomeControl81.DeviceControl.DeviceStatus)(base.EndInvoke("TurnOn", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetDeviceHistory(string name, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetDeviceHistory", _args, callback, asyncState);
                return _result;
            }

            public string EndGetDeviceHistory(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDeviceHistory", _args, result)));
                return _result;
            }
        }
    }
}
