//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace ChickPhone.IsyData {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeData", Namespace="http://schemas.datacontract.org/2004/07/HomeServices")]
    public partial class NodeData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private System.Nullable<bool> IsOnField;
        
        private System.Nullable<int> LevelField;
        
        private string NameField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsOn {
            get {
                return this.IsOnField;
            }
            set {
                if ((this.IsOnField.Equals(value) != true)) {
                    this.IsOnField = value;
                    this.RaisePropertyChanged("IsOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupData", Namespace="http://schemas.datacontract.org/2004/07/HomeServices")]
    public partial class GroupData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData> NodesField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData> Nodes {
            get {
                return this.NodesField;
            }
            set {
                if ((object.ReferenceEquals(this.NodesField, value) != true)) {
                    this.NodesField = value;
                    this.RaisePropertyChanged("Nodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IsyData.IISY")]
    public interface IISY {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IISY/GetNodes", ReplyAction="http://tempuri.org/IISY/GetNodesResponse")]
        System.IAsyncResult BeginGetNodes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData> EndGetNodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IISY/GetGroups", ReplyAction="http://tempuri.org/IISY/GetGroupsResponse")]
        System.IAsyncResult BeginGetGroups(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.GroupData> EndGetGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IISY/GetNode", ReplyAction="http://tempuri.org/IISY/GetNodeResponse")]
        System.IAsyncResult BeginGetNode(string address, System.AsyncCallback callback, object asyncState);
        
        ChickPhone.IsyData.NodeData EndGetNode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IISY/TurnOff", ReplyAction="http://tempuri.org/IISY/TurnOffResponse")]
        System.IAsyncResult BeginTurnOff(string address, System.AsyncCallback callback, object asyncState);
        
        void EndTurnOff(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IISY/TurnOn", ReplyAction="http://tempuri.org/IISY/TurnOnResponse")]
        System.IAsyncResult BeginTurnOn(string address, System.AsyncCallback callback, object asyncState);
        
        void EndTurnOn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IISY/GetStatus", ReplyAction="http://tempuri.org/IISY/GetStatusResponse")]
        System.IAsyncResult BeginGetStatus(string address, System.AsyncCallback callback, object asyncState);
        
        bool EndGetStatus(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IISYChannel : global::ChickPhone.IsyData.IISY, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.GroupData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.GroupData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ChickPhone.IsyData.NodeData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ChickPhone.IsyData.NodeData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ISYClient : System.ServiceModel.ClientBase<global::ChickPhone.IsyData.IISY>, global::ChickPhone.IsyData.IISY {
        
        private BeginOperationDelegate onBeginGetNodesDelegate;
        
        private EndOperationDelegate onEndGetNodesDelegate;
        
        private System.Threading.SendOrPostCallback onGetNodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupsDelegate;
        
        private EndOperationDelegate onEndGetGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNodeDelegate;
        
        private EndOperationDelegate onEndGetNodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetNodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginTurnOffDelegate;
        
        private EndOperationDelegate onEndTurnOffDelegate;
        
        private System.Threading.SendOrPostCallback onTurnOffCompletedDelegate;
        
        private BeginOperationDelegate onBeginTurnOnDelegate;
        
        private EndOperationDelegate onEndTurnOnDelegate;
        
        private System.Threading.SendOrPostCallback onTurnOnCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatusDelegate;
        
        private EndOperationDelegate onEndGetStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ISYClient() {
        }
        
        public ISYClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ISYClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ISYClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ISYClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetNodesCompletedEventArgs> GetNodesCompleted;
        
        public event System.EventHandler<GetGroupsCompletedEventArgs> GetGroupsCompleted;
        
        public event System.EventHandler<GetNodeCompletedEventArgs> GetNodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TurnOffCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TurnOnCompleted;
        
        public event System.EventHandler<GetStatusCompletedEventArgs> GetStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::ChickPhone.IsyData.IISY.BeginGetNodes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNodes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData> global::ChickPhone.IsyData.IISY.EndGetNodes(System.IAsyncResult result) {
            return base.Channel.EndGetNodes(result);
        }
        
        private System.IAsyncResult OnBeginGetNodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((global::ChickPhone.IsyData.IISY)(this)).BeginGetNodes(callback, asyncState);
        }
        
        private object[] OnEndGetNodes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData> retVal = ((global::ChickPhone.IsyData.IISY)(this)).EndGetNodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNodesCompleted(object state) {
            if ((this.GetNodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNodesCompleted(this, new GetNodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNodesAsync() {
            this.GetNodesAsync(null);
        }
        
        public void GetNodesAsync(object userState) {
            if ((this.onBeginGetNodesDelegate == null)) {
                this.onBeginGetNodesDelegate = new BeginOperationDelegate(this.OnBeginGetNodes);
            }
            if ((this.onEndGetNodesDelegate == null)) {
                this.onEndGetNodesDelegate = new EndOperationDelegate(this.OnEndGetNodes);
            }
            if ((this.onGetNodesCompletedDelegate == null)) {
                this.onGetNodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNodesCompleted);
            }
            base.InvokeAsync(this.onBeginGetNodesDelegate, null, this.onEndGetNodesDelegate, this.onGetNodesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::ChickPhone.IsyData.IISY.BeginGetGroups(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroups(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.GroupData> global::ChickPhone.IsyData.IISY.EndGetGroups(System.IAsyncResult result) {
            return base.Channel.EndGetGroups(result);
        }
        
        private System.IAsyncResult OnBeginGetGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((global::ChickPhone.IsyData.IISY)(this)).BeginGetGroups(callback, asyncState);
        }
        
        private object[] OnEndGetGroups(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.GroupData> retVal = ((global::ChickPhone.IsyData.IISY)(this)).EndGetGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupsCompleted(object state) {
            if ((this.GetGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupsCompleted(this, new GetGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupsAsync() {
            this.GetGroupsAsync(null);
        }
        
        public void GetGroupsAsync(object userState) {
            if ((this.onBeginGetGroupsDelegate == null)) {
                this.onBeginGetGroupsDelegate = new BeginOperationDelegate(this.OnBeginGetGroups);
            }
            if ((this.onEndGetGroupsDelegate == null)) {
                this.onEndGetGroupsDelegate = new EndOperationDelegate(this.OnEndGetGroups);
            }
            if ((this.onGetGroupsCompletedDelegate == null)) {
                this.onGetGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupsDelegate, null, this.onEndGetGroupsDelegate, this.onGetGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::ChickPhone.IsyData.IISY.BeginGetNode(string address, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNode(address, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ChickPhone.IsyData.NodeData global::ChickPhone.IsyData.IISY.EndGetNode(System.IAsyncResult result) {
            return base.Channel.EndGetNode(result);
        }
        
        private System.IAsyncResult OnBeginGetNode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string address = ((string)(inValues[0]));
            return ((global::ChickPhone.IsyData.IISY)(this)).BeginGetNode(address, callback, asyncState);
        }
        
        private object[] OnEndGetNode(System.IAsyncResult result) {
            ChickPhone.IsyData.NodeData retVal = ((global::ChickPhone.IsyData.IISY)(this)).EndGetNode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNodeCompleted(object state) {
            if ((this.GetNodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNodeCompleted(this, new GetNodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNodeAsync(string address) {
            this.GetNodeAsync(address, null);
        }
        
        public void GetNodeAsync(string address, object userState) {
            if ((this.onBeginGetNodeDelegate == null)) {
                this.onBeginGetNodeDelegate = new BeginOperationDelegate(this.OnBeginGetNode);
            }
            if ((this.onEndGetNodeDelegate == null)) {
                this.onEndGetNodeDelegate = new EndOperationDelegate(this.OnEndGetNode);
            }
            if ((this.onGetNodeCompletedDelegate == null)) {
                this.onGetNodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetNodeDelegate, new object[] {
                        address}, this.onEndGetNodeDelegate, this.onGetNodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::ChickPhone.IsyData.IISY.BeginTurnOff(string address, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTurnOff(address, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void global::ChickPhone.IsyData.IISY.EndTurnOff(System.IAsyncResult result) {
            base.Channel.EndTurnOff(result);
        }
        
        private System.IAsyncResult OnBeginTurnOff(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string address = ((string)(inValues[0]));
            return ((global::ChickPhone.IsyData.IISY)(this)).BeginTurnOff(address, callback, asyncState);
        }
        
        private object[] OnEndTurnOff(System.IAsyncResult result) {
            ((global::ChickPhone.IsyData.IISY)(this)).EndTurnOff(result);
            return null;
        }
        
        private void OnTurnOffCompleted(object state) {
            if ((this.TurnOffCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TurnOffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TurnOffAsync(string address) {
            this.TurnOffAsync(address, null);
        }
        
        public void TurnOffAsync(string address, object userState) {
            if ((this.onBeginTurnOffDelegate == null)) {
                this.onBeginTurnOffDelegate = new BeginOperationDelegate(this.OnBeginTurnOff);
            }
            if ((this.onEndTurnOffDelegate == null)) {
                this.onEndTurnOffDelegate = new EndOperationDelegate(this.OnEndTurnOff);
            }
            if ((this.onTurnOffCompletedDelegate == null)) {
                this.onTurnOffCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTurnOffCompleted);
            }
            base.InvokeAsync(this.onBeginTurnOffDelegate, new object[] {
                        address}, this.onEndTurnOffDelegate, this.onTurnOffCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::ChickPhone.IsyData.IISY.BeginTurnOn(string address, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTurnOn(address, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void global::ChickPhone.IsyData.IISY.EndTurnOn(System.IAsyncResult result) {
            base.Channel.EndTurnOn(result);
        }
        
        private System.IAsyncResult OnBeginTurnOn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string address = ((string)(inValues[0]));
            return ((global::ChickPhone.IsyData.IISY)(this)).BeginTurnOn(address, callback, asyncState);
        }
        
        private object[] OnEndTurnOn(System.IAsyncResult result) {
            ((global::ChickPhone.IsyData.IISY)(this)).EndTurnOn(result);
            return null;
        }
        
        private void OnTurnOnCompleted(object state) {
            if ((this.TurnOnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TurnOnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TurnOnAsync(string address) {
            this.TurnOnAsync(address, null);
        }
        
        public void TurnOnAsync(string address, object userState) {
            if ((this.onBeginTurnOnDelegate == null)) {
                this.onBeginTurnOnDelegate = new BeginOperationDelegate(this.OnBeginTurnOn);
            }
            if ((this.onEndTurnOnDelegate == null)) {
                this.onEndTurnOnDelegate = new EndOperationDelegate(this.OnEndTurnOn);
            }
            if ((this.onTurnOnCompletedDelegate == null)) {
                this.onTurnOnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTurnOnCompleted);
            }
            base.InvokeAsync(this.onBeginTurnOnDelegate, new object[] {
                        address}, this.onEndTurnOnDelegate, this.onTurnOnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult global::ChickPhone.IsyData.IISY.BeginGetStatus(string address, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatus(address, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool global::ChickPhone.IsyData.IISY.EndGetStatus(System.IAsyncResult result) {
            return base.Channel.EndGetStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string address = ((string)(inValues[0]));
            return ((global::ChickPhone.IsyData.IISY)(this)).BeginGetStatus(address, callback, asyncState);
        }
        
        private object[] OnEndGetStatus(System.IAsyncResult result) {
            bool retVal = ((global::ChickPhone.IsyData.IISY)(this)).EndGetStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusCompleted(object state) {
            if ((this.GetStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusAsync(string address) {
            this.GetStatusAsync(address, null);
        }
        
        public void GetStatusAsync(string address, object userState) {
            if ((this.onBeginGetStatusDelegate == null)) {
                this.onBeginGetStatusDelegate = new BeginOperationDelegate(this.OnBeginGetStatus);
            }
            if ((this.onEndGetStatusDelegate == null)) {
                this.onEndGetStatusDelegate = new EndOperationDelegate(this.OnEndGetStatus);
            }
            if ((this.onGetStatusCompletedDelegate == null)) {
                this.onGetStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusDelegate, new object[] {
                        address}, this.onEndGetStatusDelegate, this.onGetStatusCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override global::ChickPhone.IsyData.IISY CreateChannel() {
            return new ISYClientChannel(this);
        }
        
        private class ISYClientChannel : ChannelBase<global::ChickPhone.IsyData.IISY>, global::ChickPhone.IsyData.IISY {
            
            public ISYClientChannel(System.ServiceModel.ClientBase<global::ChickPhone.IsyData.IISY> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetNodes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNodes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData> EndGetNodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData> _result = ((System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.NodeData>)(base.EndInvoke("GetNodes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGroups(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetGroups", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.GroupData> EndGetGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.GroupData> _result = ((System.Collections.ObjectModel.ObservableCollection<ChickPhone.IsyData.GroupData>)(base.EndInvoke("GetGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNode(string address, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = address;
                System.IAsyncResult _result = base.BeginInvoke("GetNode", _args, callback, asyncState);
                return _result;
            }
            
            public ChickPhone.IsyData.NodeData EndGetNode(System.IAsyncResult result) {
                object[] _args = new object[0];
                ChickPhone.IsyData.NodeData _result = ((ChickPhone.IsyData.NodeData)(base.EndInvoke("GetNode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTurnOff(string address, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = address;
                System.IAsyncResult _result = base.BeginInvoke("TurnOff", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTurnOff(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("TurnOff", _args, result);
            }
            
            public System.IAsyncResult BeginTurnOn(string address, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = address;
                System.IAsyncResult _result = base.BeginInvoke("TurnOn", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTurnOn(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("TurnOn", _args, result);
            }
            
            public System.IAsyncResult BeginGetStatus(string address, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = address;
                System.IAsyncResult _result = base.BeginInvoke("GetStatus", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndGetStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("GetStatus", _args, result)));
                return _result;
            }
        }
    }
}
