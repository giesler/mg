//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace giesler.org.lists.ListData {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientAuthenticationData", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class ClientAuthenticationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid DeviceUniqueIdField;
        
        private System.Guid PersonUniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeviceUniqueId {
            get {
                return this.DeviceUniqueIdField;
            }
            set {
                if ((this.DeviceUniqueIdField.Equals(value) != true)) {
                    this.DeviceUniqueIdField = value;
                    this.RaisePropertyChanged("DeviceUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonUniqueId {
            get {
                return this.PersonUniqueIdField;
            }
            set {
                if ((this.PersonUniqueIdField.Equals(value) != true)) {
                    this.PersonUniqueIdField = value;
                    this.RaisePropertyChanged("PersonUniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddListReturnValue", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class AddListReturnValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsDuplicateField;
        
        private giesler.org.lists.ListData.List ListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDuplicate {
            get {
                return this.IsDuplicateField;
            }
            set {
                if ((this.IsDuplicateField.Equals(value) != true)) {
                    this.IsDuplicateField = value;
                    this.RaisePropertyChanged("IsDuplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public giesler.org.lists.ListData.List List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="List", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class List : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private bool IsDeletedField;
        
        private System.Guid UniqueIdField;
        
        private System.Collections.Generic.List<giesler.org.lists.ListData.ListPerson> ListPersonsField;
        
        private System.Collections.Generic.List<giesler.org.lists.ListData.ListItem> ListItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Collections.Generic.List<giesler.org.lists.ListData.ListPerson> ListPersons {
            get {
                return this.ListPersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListPersonsField, value) != true)) {
                    this.ListPersonsField = value;
                    this.RaisePropertyChanged("ListPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Collections.Generic.List<giesler.org.lists.ListData.ListItem> ListItems {
            get {
                return this.ListItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemsField, value) != true)) {
                    this.ListItemsField = value;
                    this.RaisePropertyChanged("ListItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListPerson", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class ListPerson : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ListIdField;
        
        private int PersonIdField;
        
        private System.DateTime AddedTimeField;
        
        private bool IsAcceptedField;
        
        private bool IsListOwnerField;
        
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ListId {
            get {
                return this.ListIdField;
            }
            set {
                if ((this.ListIdField.Equals(value) != true)) {
                    this.ListIdField = value;
                    this.RaisePropertyChanged("ListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime AddedTime {
            get {
                return this.AddedTimeField;
            }
            set {
                if ((this.AddedTimeField.Equals(value) != true)) {
                    this.AddedTimeField = value;
                    this.RaisePropertyChanged("AddedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsAccepted {
            get {
                return this.IsAcceptedField;
            }
            set {
                if ((this.IsAcceptedField.Equals(value) != true)) {
                    this.IsAcceptedField = value;
                    this.RaisePropertyChanged("IsAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool IsListOwner {
            get {
                return this.IsListOwnerField;
            }
            set {
                if ((this.IsListOwnerField.Equals(value) != true)) {
                    this.IsListOwnerField = value;
                    this.RaisePropertyChanged("IsListOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListItem", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class ListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private int ListIdField;
        
        private string NameField;
        
        private int AddedByPersonIdField;
        
        private System.DateTime AddedTimeField;
        
        private System.DateTime ChangedTimeField;
        
        private int ChangeDeviceIdField;
        
        private bool IsDeletedField;
        
        private System.Nullable<System.DateTime> DeletedTimeField;
        
        private System.Nullable<int> DeletedByPersonIdField;
        
        private System.Guid UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ListId {
            get {
                return this.ListIdField;
            }
            set {
                if ((this.ListIdField.Equals(value) != true)) {
                    this.ListIdField = value;
                    this.RaisePropertyChanged("ListId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int AddedByPersonId {
            get {
                return this.AddedByPersonIdField;
            }
            set {
                if ((this.AddedByPersonIdField.Equals(value) != true)) {
                    this.AddedByPersonIdField = value;
                    this.RaisePropertyChanged("AddedByPersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime AddedTime {
            get {
                return this.AddedTimeField;
            }
            set {
                if ((this.AddedTimeField.Equals(value) != true)) {
                    this.AddedTimeField = value;
                    this.RaisePropertyChanged("AddedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.DateTime ChangedTime {
            get {
                return this.ChangedTimeField;
            }
            set {
                if ((this.ChangedTimeField.Equals(value) != true)) {
                    this.ChangedTimeField = value;
                    this.RaisePropertyChanged("ChangedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int ChangeDeviceId {
            get {
                return this.ChangeDeviceIdField;
            }
            set {
                if ((this.ChangeDeviceIdField.Equals(value) != true)) {
                    this.ChangeDeviceIdField = value;
                    this.RaisePropertyChanged("ChangeDeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<System.DateTime> DeletedTime {
            get {
                return this.DeletedTimeField;
            }
            set {
                if ((this.DeletedTimeField.Equals(value) != true)) {
                    this.DeletedTimeField = value;
                    this.RaisePropertyChanged("DeletedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<int> DeletedByPersonId {
            get {
                return this.DeletedByPersonIdField;
            }
            set {
                if ((this.DeletedByPersonIdField.Equals(value) != true)) {
                    this.DeletedByPersonIdField = value;
                    this.RaisePropertyChanged("DeletedByPersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateListReturnValue", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class UpdateListReturnValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsDuplicateField;
        
        private bool IsInvalidIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDuplicate {
            get {
                return this.IsDuplicateField;
            }
            set {
                if ((this.IsDuplicateField.Equals(value) != true)) {
                    this.IsDuplicateField = value;
                    this.RaisePropertyChanged("IsDuplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInvalidId {
            get {
                return this.IsInvalidIdField;
            }
            set {
                if ((this.IsInvalidIdField.Equals(value) != true)) {
                    this.IsInvalidIdField = value;
                    this.RaisePropertyChanged("IsInvalidId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetListsResult", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class GetListsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid UniqueIdField;
        
        private string NameField;
        
        private bool IsListOwnerField;
        
        private System.Nullable<int> ItemCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IsListOwner {
            get {
                return this.IsListOwnerField;
            }
            set {
                if ((this.IsListOwnerField.Equals(value) != true)) {
                    this.IsListOwnerField = value;
                    this.RaisePropertyChanged("IsListOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> ItemCount {
            get {
                return this.ItemCountField;
            }
            set {
                if ((this.ItemCountField.Equals(value) != true)) {
                    this.ItemCountField = value;
                    this.RaisePropertyChanged("ItemCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllResult", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class GetAllResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid UniqueIdField;
        
        private string NameField;
        
        private bool IsListOwnerField;
        
        private System.Nullable<System.Guid> ItemUniqueIdField;
        
        private string ItemNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IsListOwner {
            get {
                return this.IsListOwnerField;
            }
            set {
                if ((this.IsListOwnerField.Equals(value) != true)) {
                    this.IsListOwnerField = value;
                    this.RaisePropertyChanged("IsListOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<System.Guid> ItemUniqueId {
            get {
                return this.ItemUniqueIdField;
            }
            set {
                if ((this.ItemUniqueIdField.Equals(value) != true)) {
                    this.ItemUniqueIdField = value;
                    this.RaisePropertyChanged("ItemUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllListItemsResult", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class GetAllListItemsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid UniqueIdField;
        
        private string NameField;
        
        private System.Guid ListUniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Guid ListUniqueId {
            get {
                return this.ListUniqueIdField;
            }
            set {
                if ((this.ListUniqueIdField.Equals(value) != true)) {
                    this.ListUniqueIdField = value;
                    this.RaisePropertyChanged("ListUniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddListItemReturnValue", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class AddListItemReturnValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsDuplicateField;
        
        private giesler.org.lists.ListData.ListItem ListItemField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDuplicate {
            get {
                return this.IsDuplicateField;
            }
            set {
                if ((this.IsDuplicateField.Equals(value) != true)) {
                    this.IsDuplicateField = value;
                    this.RaisePropertyChanged("IsDuplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public giesler.org.lists.ListData.ListItem ListItem {
            get {
                return this.ListItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemField, value) != true)) {
                    this.ListItemField = value;
                    this.RaisePropertyChanged("ListItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateListItemReturnData", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class UpdateListItemReturnData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime LastItemChangeTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastItemChangeTime {
            get {
                return this.LastItemChangeTimeField;
            }
            set {
                if ((this.LastItemChangeTimeField.Equals(value) != true)) {
                    this.LastItemChangeTimeField = value;
                    this.RaisePropertyChanged("LastItemChangeTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteListItemReturnData", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class DeleteListItemReturnData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime LastItemChangeTimek__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LastItemChangeTime>k__BackingField", IsRequired=true)]
        public System.DateTime LastItemChangeTimek__BackingField {
            get {
                return this.LastItemChangeTimek__BackingFieldField;
            }
            set {
                if ((this.LastItemChangeTimek__BackingFieldField.Equals(value) != true)) {
                    this.LastItemChangeTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("LastItemChangeTimek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class Person : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        private string LiveUserIdField;
        
        private System.Guid UniqueIdField;
        
        private System.Collections.Generic.List<giesler.org.lists.ListData.ListPerson> ListPersonsField;
        
        private System.Collections.Generic.List<giesler.org.lists.ListData.ListItem> ListItemsField;
        
        private System.Collections.Generic.List<giesler.org.lists.ListData.ListItem> ListItems1Field;
        
        private System.Collections.Generic.List<giesler.org.lists.ListData.PersonDevice> PersonDevicesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string LiveUserId {
            get {
                return this.LiveUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LiveUserIdField, value) != true)) {
                    this.LiveUserIdField = value;
                    this.RaisePropertyChanged("LiveUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Collections.Generic.List<giesler.org.lists.ListData.ListPerson> ListPersons {
            get {
                return this.ListPersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListPersonsField, value) != true)) {
                    this.ListPersonsField = value;
                    this.RaisePropertyChanged("ListPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Collections.Generic.List<giesler.org.lists.ListData.ListItem> ListItems {
            get {
                return this.ListItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemsField, value) != true)) {
                    this.ListItemsField = value;
                    this.RaisePropertyChanged("ListItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Collections.Generic.List<giesler.org.lists.ListData.ListItem> ListItems1 {
            get {
                return this.ListItems1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListItems1Field, value) != true)) {
                    this.ListItems1Field = value;
                    this.RaisePropertyChanged("ListItems1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.Generic.List<giesler.org.lists.ListData.PersonDevice> PersonDevices {
            get {
                return this.PersonDevicesField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonDevicesField, value) != true)) {
                    this.PersonDevicesField = value;
                    this.RaisePropertyChanged("PersonDevices");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDevice", Namespace="http://schemas.datacontract.org/2004/07/msn2.net.ShoppingList")]
    public partial class PersonDevice : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private int PersonIdField;
        
        private string NameField;
        
        private System.DateTime LastConnectTimeField;
        
        private System.Guid UniqueIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime LastConnectTime {
            get {
                return this.LastConnectTimeField;
            }
            set {
                if ((this.LastConnectTimeField.Equals(value) != true)) {
                    this.LastConnectTimeField = value;
                    this.RaisePropertyChanged("LastConnectTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://svc.listgo.mobi", ConfigurationName="ListData.IListDataService")]
    public interface IListDataService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/AddList", ReplyAction="http://svc.listgo.mobi/IListDataService/AddListResponse")]
        System.IAsyncResult BeginAddList(giesler.org.lists.ListData.ClientAuthenticationData auth, string name, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListData.AddListReturnValue EndAddList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/UpdateList", ReplyAction="http://svc.listgo.mobi/IListDataService/UpdateListResponse")]
        System.IAsyncResult BeginUpdateList(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.List list, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListData.UpdateListReturnValue EndUpdateList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/DeleteList", ReplyAction="http://svc.listgo.mobi/IListDataService/DeleteListResponse")]
        System.IAsyncResult BeginDeleteList(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid uniqueId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/GetLists", ReplyAction="http://svc.listgo.mobi/IListDataService/GetListsResponse")]
        System.IAsyncResult BeginGetLists(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<giesler.org.lists.ListData.GetListsResult> EndGetLists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/GetAll", ReplyAction="http://svc.listgo.mobi/IListDataService/GetAllResponse")]
        System.IAsyncResult BeginGetAll(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<giesler.org.lists.ListData.GetAllResult> EndGetAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/GetListItems", ReplyAction="http://svc.listgo.mobi/IListDataService/GetListItemsResponse")]
        System.IAsyncResult BeginGetListItems(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> EndGetListItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/GetAllListItems", ReplyAction="http://svc.listgo.mobi/IListDataService/GetAllListItemsResponse")]
        System.IAsyncResult BeginGetAllListItems(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> EndGetAllListItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/AddListItem", ReplyAction="http://svc.listgo.mobi/IListDataService/AddListItemResponse")]
        System.IAsyncResult BeginAddListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, string name, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListData.AddListItemReturnValue EndAddListItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/AddListItemWithId", ReplyAction="http://svc.listgo.mobi/IListDataService/AddListItemWithIdResponse")]
        System.IAsyncResult BeginAddListItemWithId(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, System.Guid itemUniqueId, string name, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListData.AddListItemReturnValue EndAddListItemWithId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/UpdateListItem", ReplyAction="http://svc.listgo.mobi/IListDataService/UpdateListItemResponse")]
        System.IAsyncResult BeginUpdateListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.ListItem item, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListData.UpdateListItemReturnData EndUpdateListItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/DeleteListItem", ReplyAction="http://svc.listgo.mobi/IListDataService/DeleteListItemResponse")]
        System.IAsyncResult BeginDeleteListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listItemUniqueId, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListData.DeleteListItemReturnData EndDeleteListItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/GetLastChangeTime", ReplyAction="http://svc.listgo.mobi/IListDataService/GetLastChangeTimeResponse")]
        System.IAsyncResult BeginGetLastChangeTime(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetLastChangeTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/GetPerson", ReplyAction="http://svc.listgo.mobi/IListDataService/GetPersonResponse")]
        System.IAsyncResult BeginGetPerson(string liveUserId, string name, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListData.Person EndGetPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/UpdatePerson", ReplyAction="http://svc.listgo.mobi/IListDataService/UpdatePersonResponse")]
        System.IAsyncResult BeginUpdatePerson(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.Person person, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/AddDevice", ReplyAction="http://svc.listgo.mobi/IListDataService/AddDeviceResponse")]
        System.IAsyncResult BeginAddDevice(giesler.org.lists.ListData.ClientAuthenticationData auth, string deviceName, System.AsyncCallback callback, object asyncState);
        
        giesler.org.lists.ListData.PersonDevice EndAddDevice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://svc.listgo.mobi/IListDataService/RemoveDevice", ReplyAction="http://svc.listgo.mobi/IListDataService/RemoveDeviceResponse")]
        System.IAsyncResult BeginRemoveDevice(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid deviceId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveDevice(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IListDataServiceChannel : giesler.org.lists.ListData.IListDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListData.AddListReturnValue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListData.AddListReturnValue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListData.UpdateListReturnValue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListData.UpdateListReturnValue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<giesler.org.lists.ListData.GetListsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<giesler.org.lists.ListData.GetListsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<giesler.org.lists.ListData.GetAllResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<giesler.org.lists.ListData.GetAllResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllListItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllListItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddListItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddListItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListData.AddListItemReturnValue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListData.AddListItemReturnValue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddListItemWithIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddListItemWithIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListData.AddListItemReturnValue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListData.AddListItemReturnValue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateListItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateListItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListData.UpdateListItemReturnData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListData.UpdateListItemReturnData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteListItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteListItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListData.DeleteListItemReturnData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListData.DeleteListItemReturnData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLastChangeTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLastChangeTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListData.Person Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListData.Person)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public giesler.org.lists.ListData.PersonDevice Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((giesler.org.lists.ListData.PersonDevice)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListDataServiceClient : System.ServiceModel.ClientBase<giesler.org.lists.ListData.IListDataService>, giesler.org.lists.ListData.IListDataService {
        
        private BeginOperationDelegate onBeginAddListDelegate;
        
        private EndOperationDelegate onEndAddListDelegate;
        
        private System.Threading.SendOrPostCallback onAddListCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateListDelegate;
        
        private EndOperationDelegate onEndUpdateListDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateListCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteListDelegate;
        
        private EndOperationDelegate onEndDeleteListDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListsDelegate;
        
        private EndOperationDelegate onEndGetListsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDelegate;
        
        private EndOperationDelegate onEndGetAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetListItemsDelegate;
        
        private EndOperationDelegate onEndGetListItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetListItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllListItemsDelegate;
        
        private EndOperationDelegate onEndGetAllListItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllListItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddListItemDelegate;
        
        private EndOperationDelegate onEndAddListItemDelegate;
        
        private System.Threading.SendOrPostCallback onAddListItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddListItemWithIdDelegate;
        
        private EndOperationDelegate onEndAddListItemWithIdDelegate;
        
        private System.Threading.SendOrPostCallback onAddListItemWithIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateListItemDelegate;
        
        private EndOperationDelegate onEndUpdateListItemDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateListItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteListItemDelegate;
        
        private EndOperationDelegate onEndDeleteListItemDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteListItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLastChangeTimeDelegate;
        
        private EndOperationDelegate onEndGetLastChangeTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetLastChangeTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPersonDelegate;
        
        private EndOperationDelegate onEndGetPersonDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePersonDelegate;
        
        private EndOperationDelegate onEndUpdatePersonDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDeviceDelegate;
        
        private EndOperationDelegate onEndAddDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onAddDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveDeviceDelegate;
        
        private EndOperationDelegate onEndRemoveDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ListDataServiceClient() {
        }
        
        public ListDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ListDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ListDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ListDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<AddListCompletedEventArgs> AddListCompleted;
        
        public event System.EventHandler<UpdateListCompletedEventArgs> UpdateListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteListCompleted;
        
        public event System.EventHandler<GetListsCompletedEventArgs> GetListsCompleted;
        
        public event System.EventHandler<GetAllCompletedEventArgs> GetAllCompleted;
        
        public event System.EventHandler<GetListItemsCompletedEventArgs> GetListItemsCompleted;
        
        public event System.EventHandler<GetAllListItemsCompletedEventArgs> GetAllListItemsCompleted;
        
        public event System.EventHandler<AddListItemCompletedEventArgs> AddListItemCompleted;
        
        public event System.EventHandler<AddListItemWithIdCompletedEventArgs> AddListItemWithIdCompleted;
        
        public event System.EventHandler<UpdateListItemCompletedEventArgs> UpdateListItemCompleted;
        
        public event System.EventHandler<DeleteListItemCompletedEventArgs> DeleteListItemCompleted;
        
        public event System.EventHandler<GetLastChangeTimeCompletedEventArgs> GetLastChangeTimeCompleted;
        
        public event System.EventHandler<GetPersonCompletedEventArgs> GetPersonCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePersonCompleted;
        
        public event System.EventHandler<AddDeviceCompletedEventArgs> AddDeviceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveDeviceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginAddList(giesler.org.lists.ListData.ClientAuthenticationData auth, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddList(auth, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListData.AddListReturnValue giesler.org.lists.ListData.IListDataService.EndAddList(System.IAsyncResult result) {
            return base.Channel.EndAddList(result);
        }
        
        private System.IAsyncResult OnBeginAddList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginAddList(auth, name, callback, asyncState);
        }
        
        private object[] OnEndAddList(System.IAsyncResult result) {
            giesler.org.lists.ListData.AddListReturnValue retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndAddList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddListCompleted(object state) {
            if ((this.AddListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddListCompleted(this, new AddListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddListAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, string name) {
            this.AddListAsync(auth, name, null);
        }
        
        public void AddListAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, string name, object userState) {
            if ((this.onBeginAddListDelegate == null)) {
                this.onBeginAddListDelegate = new BeginOperationDelegate(this.OnBeginAddList);
            }
            if ((this.onEndAddListDelegate == null)) {
                this.onEndAddListDelegate = new EndOperationDelegate(this.OnEndAddList);
            }
            if ((this.onAddListCompletedDelegate == null)) {
                this.onAddListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddListCompleted);
            }
            base.InvokeAsync(this.onBeginAddListDelegate, new object[] {
                        auth,
                        name}, this.onEndAddListDelegate, this.onAddListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginUpdateList(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.List list, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateList(auth, list, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListData.UpdateListReturnValue giesler.org.lists.ListData.IListDataService.EndUpdateList(System.IAsyncResult result) {
            return base.Channel.EndUpdateList(result);
        }
        
        private System.IAsyncResult OnBeginUpdateList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            giesler.org.lists.ListData.List list = ((giesler.org.lists.ListData.List)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginUpdateList(auth, list, callback, asyncState);
        }
        
        private object[] OnEndUpdateList(System.IAsyncResult result) {
            giesler.org.lists.ListData.UpdateListReturnValue retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndUpdateList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateListCompleted(object state) {
            if ((this.UpdateListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateListCompleted(this, new UpdateListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateListAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.List list) {
            this.UpdateListAsync(auth, list, null);
        }
        
        public void UpdateListAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.List list, object userState) {
            if ((this.onBeginUpdateListDelegate == null)) {
                this.onBeginUpdateListDelegate = new BeginOperationDelegate(this.OnBeginUpdateList);
            }
            if ((this.onEndUpdateListDelegate == null)) {
                this.onEndUpdateListDelegate = new EndOperationDelegate(this.OnEndUpdateList);
            }
            if ((this.onUpdateListCompletedDelegate == null)) {
                this.onUpdateListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateListCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateListDelegate, new object[] {
                        auth,
                        list}, this.onEndUpdateListDelegate, this.onUpdateListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginDeleteList(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid uniqueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteList(auth, uniqueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void giesler.org.lists.ListData.IListDataService.EndDeleteList(System.IAsyncResult result) {
            base.Channel.EndDeleteList(result);
        }
        
        private System.IAsyncResult OnBeginDeleteList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            System.Guid uniqueId = ((System.Guid)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginDeleteList(auth, uniqueId, callback, asyncState);
        }
        
        private object[] OnEndDeleteList(System.IAsyncResult result) {
            ((giesler.org.lists.ListData.IListDataService)(this)).EndDeleteList(result);
            return null;
        }
        
        private void OnDeleteListCompleted(object state) {
            if ((this.DeleteListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteListAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid uniqueId) {
            this.DeleteListAsync(auth, uniqueId, null);
        }
        
        public void DeleteListAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid uniqueId, object userState) {
            if ((this.onBeginDeleteListDelegate == null)) {
                this.onBeginDeleteListDelegate = new BeginOperationDelegate(this.OnBeginDeleteList);
            }
            if ((this.onEndDeleteListDelegate == null)) {
                this.onEndDeleteListDelegate = new EndOperationDelegate(this.OnEndDeleteList);
            }
            if ((this.onDeleteListCompletedDelegate == null)) {
                this.onDeleteListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteListCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteListDelegate, new object[] {
                        auth,
                        uniqueId}, this.onEndDeleteListDelegate, this.onDeleteListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginGetLists(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLists(auth, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<giesler.org.lists.ListData.GetListsResult> giesler.org.lists.ListData.IListDataService.EndGetLists(System.IAsyncResult result) {
            return base.Channel.EndGetLists(result);
        }
        
        private System.IAsyncResult OnBeginGetLists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginGetLists(auth, callback, asyncState);
        }
        
        private object[] OnEndGetLists(System.IAsyncResult result) {
            System.Collections.Generic.List<giesler.org.lists.ListData.GetListsResult> retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndGetLists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListsCompleted(object state) {
            if ((this.GetListsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListsCompleted(this, new GetListsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListsAsync(giesler.org.lists.ListData.ClientAuthenticationData auth) {
            this.GetListsAsync(auth, null);
        }
        
        public void GetListsAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, object userState) {
            if ((this.onBeginGetListsDelegate == null)) {
                this.onBeginGetListsDelegate = new BeginOperationDelegate(this.OnBeginGetLists);
            }
            if ((this.onEndGetListsDelegate == null)) {
                this.onEndGetListsDelegate = new EndOperationDelegate(this.OnEndGetLists);
            }
            if ((this.onGetListsCompletedDelegate == null)) {
                this.onGetListsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListsDelegate, new object[] {
                        auth}, this.onEndGetListsDelegate, this.onGetListsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginGetAll(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAll(auth, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<giesler.org.lists.ListData.GetAllResult> giesler.org.lists.ListData.IListDataService.EndGetAll(System.IAsyncResult result) {
            return base.Channel.EndGetAll(result);
        }
        
        private System.IAsyncResult OnBeginGetAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginGetAll(auth, callback, asyncState);
        }
        
        private object[] OnEndGetAll(System.IAsyncResult result) {
            System.Collections.Generic.List<giesler.org.lists.ListData.GetAllResult> retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndGetAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCompleted(object state) {
            if ((this.GetAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCompleted(this, new GetAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAsync(giesler.org.lists.ListData.ClientAuthenticationData auth) {
            this.GetAllAsync(auth, null);
        }
        
        public void GetAllAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, object userState) {
            if ((this.onBeginGetAllDelegate == null)) {
                this.onBeginGetAllDelegate = new BeginOperationDelegate(this.OnBeginGetAll);
            }
            if ((this.onEndGetAllDelegate == null)) {
                this.onEndGetAllDelegate = new EndOperationDelegate(this.OnEndGetAll);
            }
            if ((this.onGetAllCompletedDelegate == null)) {
                this.onGetAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDelegate, new object[] {
                        auth}, this.onEndGetAllDelegate, this.onGetAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginGetListItems(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListItems(auth, listUniqueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> giesler.org.lists.ListData.IListDataService.EndGetListItems(System.IAsyncResult result) {
            return base.Channel.EndGetListItems(result);
        }
        
        private System.IAsyncResult OnBeginGetListItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            System.Guid listUniqueId = ((System.Guid)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginGetListItems(auth, listUniqueId, callback, asyncState);
        }
        
        private object[] OnEndGetListItems(System.IAsyncResult result) {
            System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndGetListItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListItemsCompleted(object state) {
            if ((this.GetListItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListItemsCompleted(this, new GetListItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListItemsAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId) {
            this.GetListItemsAsync(auth, listUniqueId, null);
        }
        
        public void GetListItemsAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, object userState) {
            if ((this.onBeginGetListItemsDelegate == null)) {
                this.onBeginGetListItemsDelegate = new BeginOperationDelegate(this.OnBeginGetListItems);
            }
            if ((this.onEndGetListItemsDelegate == null)) {
                this.onEndGetListItemsDelegate = new EndOperationDelegate(this.OnEndGetListItems);
            }
            if ((this.onGetListItemsCompletedDelegate == null)) {
                this.onGetListItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetListItemsDelegate, new object[] {
                        auth,
                        listUniqueId}, this.onEndGetListItemsDelegate, this.onGetListItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginGetAllListItems(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllListItems(auth, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> giesler.org.lists.ListData.IListDataService.EndGetAllListItems(System.IAsyncResult result) {
            return base.Channel.EndGetAllListItems(result);
        }
        
        private System.IAsyncResult OnBeginGetAllListItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginGetAllListItems(auth, callback, asyncState);
        }
        
        private object[] OnEndGetAllListItems(System.IAsyncResult result) {
            System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndGetAllListItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllListItemsCompleted(object state) {
            if ((this.GetAllListItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllListItemsCompleted(this, new GetAllListItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllListItemsAsync(giesler.org.lists.ListData.ClientAuthenticationData auth) {
            this.GetAllListItemsAsync(auth, null);
        }
        
        public void GetAllListItemsAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, object userState) {
            if ((this.onBeginGetAllListItemsDelegate == null)) {
                this.onBeginGetAllListItemsDelegate = new BeginOperationDelegate(this.OnBeginGetAllListItems);
            }
            if ((this.onEndGetAllListItemsDelegate == null)) {
                this.onEndGetAllListItemsDelegate = new EndOperationDelegate(this.OnEndGetAllListItems);
            }
            if ((this.onGetAllListItemsCompletedDelegate == null)) {
                this.onGetAllListItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllListItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllListItemsDelegate, new object[] {
                        auth}, this.onEndGetAllListItemsDelegate, this.onGetAllListItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginAddListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddListItem(auth, listUniqueId, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListData.AddListItemReturnValue giesler.org.lists.ListData.IListDataService.EndAddListItem(System.IAsyncResult result) {
            return base.Channel.EndAddListItem(result);
        }
        
        private System.IAsyncResult OnBeginAddListItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            System.Guid listUniqueId = ((System.Guid)(inValues[1]));
            string name = ((string)(inValues[2]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginAddListItem(auth, listUniqueId, name, callback, asyncState);
        }
        
        private object[] OnEndAddListItem(System.IAsyncResult result) {
            giesler.org.lists.ListData.AddListItemReturnValue retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndAddListItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddListItemCompleted(object state) {
            if ((this.AddListItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddListItemCompleted(this, new AddListItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddListItemAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, string name) {
            this.AddListItemAsync(auth, listUniqueId, name, null);
        }
        
        public void AddListItemAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, string name, object userState) {
            if ((this.onBeginAddListItemDelegate == null)) {
                this.onBeginAddListItemDelegate = new BeginOperationDelegate(this.OnBeginAddListItem);
            }
            if ((this.onEndAddListItemDelegate == null)) {
                this.onEndAddListItemDelegate = new EndOperationDelegate(this.OnEndAddListItem);
            }
            if ((this.onAddListItemCompletedDelegate == null)) {
                this.onAddListItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddListItemCompleted);
            }
            base.InvokeAsync(this.onBeginAddListItemDelegate, new object[] {
                        auth,
                        listUniqueId,
                        name}, this.onEndAddListItemDelegate, this.onAddListItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginAddListItemWithId(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, System.Guid itemUniqueId, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddListItemWithId(auth, listUniqueId, itemUniqueId, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListData.AddListItemReturnValue giesler.org.lists.ListData.IListDataService.EndAddListItemWithId(System.IAsyncResult result) {
            return base.Channel.EndAddListItemWithId(result);
        }
        
        private System.IAsyncResult OnBeginAddListItemWithId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            System.Guid listUniqueId = ((System.Guid)(inValues[1]));
            System.Guid itemUniqueId = ((System.Guid)(inValues[2]));
            string name = ((string)(inValues[3]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginAddListItemWithId(auth, listUniqueId, itemUniqueId, name, callback, asyncState);
        }
        
        private object[] OnEndAddListItemWithId(System.IAsyncResult result) {
            giesler.org.lists.ListData.AddListItemReturnValue retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndAddListItemWithId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddListItemWithIdCompleted(object state) {
            if ((this.AddListItemWithIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddListItemWithIdCompleted(this, new AddListItemWithIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddListItemWithIdAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, System.Guid itemUniqueId, string name) {
            this.AddListItemWithIdAsync(auth, listUniqueId, itemUniqueId, name, null);
        }
        
        public void AddListItemWithIdAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, System.Guid itemUniqueId, string name, object userState) {
            if ((this.onBeginAddListItemWithIdDelegate == null)) {
                this.onBeginAddListItemWithIdDelegate = new BeginOperationDelegate(this.OnBeginAddListItemWithId);
            }
            if ((this.onEndAddListItemWithIdDelegate == null)) {
                this.onEndAddListItemWithIdDelegate = new EndOperationDelegate(this.OnEndAddListItemWithId);
            }
            if ((this.onAddListItemWithIdCompletedDelegate == null)) {
                this.onAddListItemWithIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddListItemWithIdCompleted);
            }
            base.InvokeAsync(this.onBeginAddListItemWithIdDelegate, new object[] {
                        auth,
                        listUniqueId,
                        itemUniqueId,
                        name}, this.onEndAddListItemWithIdDelegate, this.onAddListItemWithIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginUpdateListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.ListItem item, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateListItem(auth, item, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListData.UpdateListItemReturnData giesler.org.lists.ListData.IListDataService.EndUpdateListItem(System.IAsyncResult result) {
            return base.Channel.EndUpdateListItem(result);
        }
        
        private System.IAsyncResult OnBeginUpdateListItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            giesler.org.lists.ListData.ListItem item = ((giesler.org.lists.ListData.ListItem)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginUpdateListItem(auth, item, callback, asyncState);
        }
        
        private object[] OnEndUpdateListItem(System.IAsyncResult result) {
            giesler.org.lists.ListData.UpdateListItemReturnData retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndUpdateListItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateListItemCompleted(object state) {
            if ((this.UpdateListItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateListItemCompleted(this, new UpdateListItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateListItemAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.ListItem item) {
            this.UpdateListItemAsync(auth, item, null);
        }
        
        public void UpdateListItemAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.ListItem item, object userState) {
            if ((this.onBeginUpdateListItemDelegate == null)) {
                this.onBeginUpdateListItemDelegate = new BeginOperationDelegate(this.OnBeginUpdateListItem);
            }
            if ((this.onEndUpdateListItemDelegate == null)) {
                this.onEndUpdateListItemDelegate = new EndOperationDelegate(this.OnEndUpdateListItem);
            }
            if ((this.onUpdateListItemCompletedDelegate == null)) {
                this.onUpdateListItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateListItemCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateListItemDelegate, new object[] {
                        auth,
                        item}, this.onEndUpdateListItemDelegate, this.onUpdateListItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginDeleteListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listItemUniqueId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteListItem(auth, listItemUniqueId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListData.DeleteListItemReturnData giesler.org.lists.ListData.IListDataService.EndDeleteListItem(System.IAsyncResult result) {
            return base.Channel.EndDeleteListItem(result);
        }
        
        private System.IAsyncResult OnBeginDeleteListItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            System.Guid listItemUniqueId = ((System.Guid)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginDeleteListItem(auth, listItemUniqueId, callback, asyncState);
        }
        
        private object[] OnEndDeleteListItem(System.IAsyncResult result) {
            giesler.org.lists.ListData.DeleteListItemReturnData retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndDeleteListItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteListItemCompleted(object state) {
            if ((this.DeleteListItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteListItemCompleted(this, new DeleteListItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteListItemAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listItemUniqueId) {
            this.DeleteListItemAsync(auth, listItemUniqueId, null);
        }
        
        public void DeleteListItemAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listItemUniqueId, object userState) {
            if ((this.onBeginDeleteListItemDelegate == null)) {
                this.onBeginDeleteListItemDelegate = new BeginOperationDelegate(this.OnBeginDeleteListItem);
            }
            if ((this.onEndDeleteListItemDelegate == null)) {
                this.onEndDeleteListItemDelegate = new EndOperationDelegate(this.OnEndDeleteListItem);
            }
            if ((this.onDeleteListItemCompletedDelegate == null)) {
                this.onDeleteListItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteListItemCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteListItemDelegate, new object[] {
                        auth,
                        listItemUniqueId}, this.onEndDeleteListItemDelegate, this.onDeleteListItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginGetLastChangeTime(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLastChangeTime(auth, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime giesler.org.lists.ListData.IListDataService.EndGetLastChangeTime(System.IAsyncResult result) {
            return base.Channel.EndGetLastChangeTime(result);
        }
        
        private System.IAsyncResult OnBeginGetLastChangeTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginGetLastChangeTime(auth, callback, asyncState);
        }
        
        private object[] OnEndGetLastChangeTime(System.IAsyncResult result) {
            System.DateTime retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndGetLastChangeTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLastChangeTimeCompleted(object state) {
            if ((this.GetLastChangeTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLastChangeTimeCompleted(this, new GetLastChangeTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLastChangeTimeAsync(giesler.org.lists.ListData.ClientAuthenticationData auth) {
            this.GetLastChangeTimeAsync(auth, null);
        }
        
        public void GetLastChangeTimeAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, object userState) {
            if ((this.onBeginGetLastChangeTimeDelegate == null)) {
                this.onBeginGetLastChangeTimeDelegate = new BeginOperationDelegate(this.OnBeginGetLastChangeTime);
            }
            if ((this.onEndGetLastChangeTimeDelegate == null)) {
                this.onEndGetLastChangeTimeDelegate = new EndOperationDelegate(this.OnEndGetLastChangeTime);
            }
            if ((this.onGetLastChangeTimeCompletedDelegate == null)) {
                this.onGetLastChangeTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLastChangeTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetLastChangeTimeDelegate, new object[] {
                        auth}, this.onEndGetLastChangeTimeDelegate, this.onGetLastChangeTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginGetPerson(string liveUserId, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerson(liveUserId, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListData.Person giesler.org.lists.ListData.IListDataService.EndGetPerson(System.IAsyncResult result) {
            return base.Channel.EndGetPerson(result);
        }
        
        private System.IAsyncResult OnBeginGetPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string liveUserId = ((string)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginGetPerson(liveUserId, name, callback, asyncState);
        }
        
        private object[] OnEndGetPerson(System.IAsyncResult result) {
            giesler.org.lists.ListData.Person retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndGetPerson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonCompleted(object state) {
            if ((this.GetPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonCompleted(this, new GetPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonAsync(string liveUserId, string name) {
            this.GetPersonAsync(liveUserId, name, null);
        }
        
        public void GetPersonAsync(string liveUserId, string name, object userState) {
            if ((this.onBeginGetPersonDelegate == null)) {
                this.onBeginGetPersonDelegate = new BeginOperationDelegate(this.OnBeginGetPerson);
            }
            if ((this.onEndGetPersonDelegate == null)) {
                this.onEndGetPersonDelegate = new EndOperationDelegate(this.OnEndGetPerson);
            }
            if ((this.onGetPersonCompletedDelegate == null)) {
                this.onGetPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonDelegate, new object[] {
                        liveUserId,
                        name}, this.onEndGetPersonDelegate, this.onGetPersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginUpdatePerson(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.Person person, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePerson(auth, person, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void giesler.org.lists.ListData.IListDataService.EndUpdatePerson(System.IAsyncResult result) {
            base.Channel.EndUpdatePerson(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            giesler.org.lists.ListData.Person person = ((giesler.org.lists.ListData.Person)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginUpdatePerson(auth, person, callback, asyncState);
        }
        
        private object[] OnEndUpdatePerson(System.IAsyncResult result) {
            ((giesler.org.lists.ListData.IListDataService)(this)).EndUpdatePerson(result);
            return null;
        }
        
        private void OnUpdatePersonCompleted(object state) {
            if ((this.UpdatePersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePersonAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.Person person) {
            this.UpdatePersonAsync(auth, person, null);
        }
        
        public void UpdatePersonAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.Person person, object userState) {
            if ((this.onBeginUpdatePersonDelegate == null)) {
                this.onBeginUpdatePersonDelegate = new BeginOperationDelegate(this.OnBeginUpdatePerson);
            }
            if ((this.onEndUpdatePersonDelegate == null)) {
                this.onEndUpdatePersonDelegate = new EndOperationDelegate(this.OnEndUpdatePerson);
            }
            if ((this.onUpdatePersonCompletedDelegate == null)) {
                this.onUpdatePersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePersonCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePersonDelegate, new object[] {
                        auth,
                        person}, this.onEndUpdatePersonDelegate, this.onUpdatePersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginAddDevice(giesler.org.lists.ListData.ClientAuthenticationData auth, string deviceName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddDevice(auth, deviceName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        giesler.org.lists.ListData.PersonDevice giesler.org.lists.ListData.IListDataService.EndAddDevice(System.IAsyncResult result) {
            return base.Channel.EndAddDevice(result);
        }
        
        private System.IAsyncResult OnBeginAddDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            string deviceName = ((string)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginAddDevice(auth, deviceName, callback, asyncState);
        }
        
        private object[] OnEndAddDevice(System.IAsyncResult result) {
            giesler.org.lists.ListData.PersonDevice retVal = ((giesler.org.lists.ListData.IListDataService)(this)).EndAddDevice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddDeviceCompleted(object state) {
            if ((this.AddDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddDeviceCompleted(this, new AddDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddDeviceAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, string deviceName) {
            this.AddDeviceAsync(auth, deviceName, null);
        }
        
        public void AddDeviceAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, string deviceName, object userState) {
            if ((this.onBeginAddDeviceDelegate == null)) {
                this.onBeginAddDeviceDelegate = new BeginOperationDelegate(this.OnBeginAddDevice);
            }
            if ((this.onEndAddDeviceDelegate == null)) {
                this.onEndAddDeviceDelegate = new EndOperationDelegate(this.OnEndAddDevice);
            }
            if ((this.onAddDeviceCompletedDelegate == null)) {
                this.onAddDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginAddDeviceDelegate, new object[] {
                        auth,
                        deviceName}, this.onEndAddDeviceDelegate, this.onAddDeviceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult giesler.org.lists.ListData.IListDataService.BeginRemoveDevice(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid deviceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveDevice(auth, deviceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void giesler.org.lists.ListData.IListDataService.EndRemoveDevice(System.IAsyncResult result) {
            base.Channel.EndRemoveDevice(result);
        }
        
        private System.IAsyncResult OnBeginRemoveDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            giesler.org.lists.ListData.ClientAuthenticationData auth = ((giesler.org.lists.ListData.ClientAuthenticationData)(inValues[0]));
            System.Guid deviceId = ((System.Guid)(inValues[1]));
            return ((giesler.org.lists.ListData.IListDataService)(this)).BeginRemoveDevice(auth, deviceId, callback, asyncState);
        }
        
        private object[] OnEndRemoveDevice(System.IAsyncResult result) {
            ((giesler.org.lists.ListData.IListDataService)(this)).EndRemoveDevice(result);
            return null;
        }
        
        private void OnRemoveDeviceCompleted(object state) {
            if ((this.RemoveDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveDeviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveDeviceAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid deviceId) {
            this.RemoveDeviceAsync(auth, deviceId, null);
        }
        
        public void RemoveDeviceAsync(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid deviceId, object userState) {
            if ((this.onBeginRemoveDeviceDelegate == null)) {
                this.onBeginRemoveDeviceDelegate = new BeginOperationDelegate(this.OnBeginRemoveDevice);
            }
            if ((this.onEndRemoveDeviceDelegate == null)) {
                this.onEndRemoveDeviceDelegate = new EndOperationDelegate(this.OnEndRemoveDevice);
            }
            if ((this.onRemoveDeviceCompletedDelegate == null)) {
                this.onRemoveDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveDeviceDelegate, new object[] {
                        auth,
                        deviceId}, this.onEndRemoveDeviceDelegate, this.onRemoveDeviceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override giesler.org.lists.ListData.IListDataService CreateChannel() {
            return new ListDataServiceClientChannel(this);
        }
        
        private class ListDataServiceClientChannel : ChannelBase<giesler.org.lists.ListData.IListDataService>, giesler.org.lists.ListData.IListDataService {
            
            public ListDataServiceClientChannel(System.ServiceModel.ClientBase<giesler.org.lists.ListData.IListDataService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddList(giesler.org.lists.ListData.ClientAuthenticationData auth, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("AddList", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListData.AddListReturnValue EndAddList(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListData.AddListReturnValue _result = ((giesler.org.lists.ListData.AddListReturnValue)(base.EndInvoke("AddList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateList(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.List list, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = list;
                System.IAsyncResult _result = base.BeginInvoke("UpdateList", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListData.UpdateListReturnValue EndUpdateList(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListData.UpdateListReturnValue _result = ((giesler.org.lists.ListData.UpdateListReturnValue)(base.EndInvoke("UpdateList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteList(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid uniqueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = uniqueId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteList", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteList(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteList", _args, result);
            }
            
            public System.IAsyncResult BeginGetLists(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = auth;
                System.IAsyncResult _result = base.BeginInvoke("GetLists", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<giesler.org.lists.ListData.GetListsResult> EndGetLists(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<giesler.org.lists.ListData.GetListsResult> _result = ((System.Collections.Generic.List<giesler.org.lists.ListData.GetListsResult>)(base.EndInvoke("GetLists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAll(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = auth;
                System.IAsyncResult _result = base.BeginInvoke("GetAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<giesler.org.lists.ListData.GetAllResult> EndGetAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<giesler.org.lists.ListData.GetAllResult> _result = ((System.Collections.Generic.List<giesler.org.lists.ListData.GetAllResult>)(base.EndInvoke("GetAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetListItems(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = listUniqueId;
                System.IAsyncResult _result = base.BeginInvoke("GetListItems", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> EndGetListItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> _result = ((System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult>)(base.EndInvoke("GetListItems", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllListItems(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = auth;
                System.IAsyncResult _result = base.BeginInvoke("GetAllListItems", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> EndGetAllListItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult> _result = ((System.Collections.Generic.List<giesler.org.lists.ListData.GetAllListItemsResult>)(base.EndInvoke("GetAllListItems", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = auth;
                _args[1] = listUniqueId;
                _args[2] = name;
                System.IAsyncResult _result = base.BeginInvoke("AddListItem", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListData.AddListItemReturnValue EndAddListItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListData.AddListItemReturnValue _result = ((giesler.org.lists.ListData.AddListItemReturnValue)(base.EndInvoke("AddListItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddListItemWithId(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listUniqueId, System.Guid itemUniqueId, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = auth;
                _args[1] = listUniqueId;
                _args[2] = itemUniqueId;
                _args[3] = name;
                System.IAsyncResult _result = base.BeginInvoke("AddListItemWithId", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListData.AddListItemReturnValue EndAddListItemWithId(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListData.AddListItemReturnValue _result = ((giesler.org.lists.ListData.AddListItemReturnValue)(base.EndInvoke("AddListItemWithId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.ListItem item, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = item;
                System.IAsyncResult _result = base.BeginInvoke("UpdateListItem", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListData.UpdateListItemReturnData EndUpdateListItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListData.UpdateListItemReturnData _result = ((giesler.org.lists.ListData.UpdateListItemReturnData)(base.EndInvoke("UpdateListItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteListItem(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid listItemUniqueId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = listItemUniqueId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteListItem", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListData.DeleteListItemReturnData EndDeleteListItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListData.DeleteListItemReturnData _result = ((giesler.org.lists.ListData.DeleteListItemReturnData)(base.EndInvoke("DeleteListItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLastChangeTime(giesler.org.lists.ListData.ClientAuthenticationData auth, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = auth;
                System.IAsyncResult _result = base.BeginInvoke("GetLastChangeTime", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndGetLastChangeTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("GetLastChangeTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPerson(string liveUserId, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = liveUserId;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetPerson", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListData.Person EndGetPerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListData.Person _result = ((giesler.org.lists.ListData.Person)(base.EndInvoke("GetPerson", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePerson(giesler.org.lists.ListData.ClientAuthenticationData auth, giesler.org.lists.ListData.Person person, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = person;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePerson", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdatePerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdatePerson", _args, result);
            }
            
            public System.IAsyncResult BeginAddDevice(giesler.org.lists.ListData.ClientAuthenticationData auth, string deviceName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = deviceName;
                System.IAsyncResult _result = base.BeginInvoke("AddDevice", _args, callback, asyncState);
                return _result;
            }
            
            public giesler.org.lists.ListData.PersonDevice EndAddDevice(System.IAsyncResult result) {
                object[] _args = new object[0];
                giesler.org.lists.ListData.PersonDevice _result = ((giesler.org.lists.ListData.PersonDevice)(base.EndInvoke("AddDevice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveDevice(giesler.org.lists.ListData.ClientAuthenticationData auth, System.Guid deviceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = auth;
                _args[1] = deviceId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveDevice", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveDevice(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveDevice", _args, result);
            }
        }
    }
}
