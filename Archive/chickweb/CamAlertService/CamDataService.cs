//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace CamDataService {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ICameraData", Namespace="http://tempuri.org/")]
    public partial class CameraDataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetItemFilenameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreviousAndNextLogItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVideoFilenameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVideosOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVideoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlertsBeforeDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteVideoOperationCompleted;
        
        /// <remarks/>
        public CameraDataService() {
            this.Url = "http://cams.msn2.net/camdata.svc";
        }
        
        /// <remarks/>
        public event GetItemFilenameCompletedEventHandler GetItemFilenameCompleted;
        
        /// <remarks/>
        public event GetItemsCompletedEventHandler GetItemsCompleted;
        
        /// <remarks/>
        public event GetPreviousAndNextLogItemsCompletedEventHandler GetPreviousAndNextLogItemsCompleted;
        
        /// <remarks/>
        public event GetVideoFilenameCompletedEventHandler GetVideoFilenameCompleted;
        
        /// <remarks/>
        public event GetVideosCompletedEventHandler GetVideosCompleted;
        
        /// <remarks/>
        public event AddVideoCompletedEventHandler AddVideoCompleted;
        
        /// <remarks/>
        public event AddAlertCompletedEventHandler AddAlertCompleted;
        
        /// <remarks/>
        public event GetAlertsBeforeDateCompletedEventHandler GetAlertsBeforeDateCompleted;
        
        /// <remarks/>
        public event DeleteAlertCompletedEventHandler DeleteAlertCompleted;
        
        /// <remarks/>
        public event DeleteVideoCompletedEventHandler DeleteVideoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/GetItemFilename", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetItemFilename(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetItemFilename", new object[] {
                        id,
                        idSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItemFilename(int id, bool idSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItemFilename", new object[] {
                        id,
                        idSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetItemFilename(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemFilenameAsync(int id, bool idSpecified) {
            this.GetItemFilenameAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetItemFilenameAsync(int id, bool idSpecified, object userState) {
            if ((this.GetItemFilenameOperationCompleted == null)) {
                this.GetItemFilenameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemFilenameOperationCompleted);
            }
            this.InvokeAsync("GetItemFilename", new object[] {
                        id,
                        idSpecified}, this.GetItemFilenameOperationCompleted, userState);
        }
        
        private void OnGetItemFilenameOperationCompleted(object arg) {
            if ((this.GetItemFilenameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemFilenameCompleted(this, new GetItemFilenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/GetItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public LogItem[] GetItems(System.DateTime date, [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateSpecified) {
            object[] results = this.Invoke("GetItems", new object[] {
                        date,
                        dateSpecified});
            return ((LogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItems(System.DateTime date, bool dateSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItems", new object[] {
                        date,
                        dateSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogItem[] EndGetItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsAsync(System.DateTime date, bool dateSpecified) {
            this.GetItemsAsync(date, dateSpecified, null);
        }
        
        /// <remarks/>
        public void GetItemsAsync(System.DateTime date, bool dateSpecified, object userState) {
            if ((this.GetItemsOperationCompleted == null)) {
                this.GetItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsOperationCompleted);
            }
            this.InvokeAsync("GetItems", new object[] {
                        date,
                        dateSpecified}, this.GetItemsOperationCompleted, userState);
        }
        
        private void OnGetItemsOperationCompleted(object arg) {
            if ((this.GetItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsCompleted(this, new GetItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/GetPreviousAndNextLogItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PreviousAndNextLogItems GetPreviousAndNextLogItems([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("GetPreviousAndNextLogItems", new object[] {
                        id});
            return ((PreviousAndNextLogItems)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPreviousAndNextLogItems(string id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPreviousAndNextLogItems", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public PreviousAndNextLogItems EndGetPreviousAndNextLogItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PreviousAndNextLogItems)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreviousAndNextLogItemsAsync(string id) {
            this.GetPreviousAndNextLogItemsAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPreviousAndNextLogItemsAsync(string id, object userState) {
            if ((this.GetPreviousAndNextLogItemsOperationCompleted == null)) {
                this.GetPreviousAndNextLogItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreviousAndNextLogItemsOperationCompleted);
            }
            this.InvokeAsync("GetPreviousAndNextLogItems", new object[] {
                        id}, this.GetPreviousAndNextLogItemsOperationCompleted, userState);
        }
        
        private void OnGetPreviousAndNextLogItemsOperationCompleted(object arg) {
            if ((this.GetPreviousAndNextLogItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreviousAndNextLogItemsCompleted(this, new GetPreviousAndNextLogItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/GetVideoFilename", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetVideoFilename(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetVideoFilename", new object[] {
                        id,
                        idSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVideoFilename(int id, bool idSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVideoFilename", new object[] {
                        id,
                        idSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetVideoFilename(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVideoFilenameAsync(int id, bool idSpecified) {
            this.GetVideoFilenameAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetVideoFilenameAsync(int id, bool idSpecified, object userState) {
            if ((this.GetVideoFilenameOperationCompleted == null)) {
                this.GetVideoFilenameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVideoFilenameOperationCompleted);
            }
            this.InvokeAsync("GetVideoFilename", new object[] {
                        id,
                        idSpecified}, this.GetVideoFilenameOperationCompleted, userState);
        }
        
        private void OnGetVideoFilenameOperationCompleted(object arg) {
            if ((this.GetVideoFilenameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVideoFilenameCompleted(this, new GetVideoFilenameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/GetVideos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public VideoItem[] GetVideos(System.DateTime startTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool startTimeSpecified, System.DateTime endTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool endTimeSpecified) {
            object[] results = this.Invoke("GetVideos", new object[] {
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified});
            return ((VideoItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVideos(System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVideos", new object[] {
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public VideoItem[] EndGetVideos(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VideoItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVideosAsync(System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified) {
            this.GetVideosAsync(startTime, startTimeSpecified, endTime, endTimeSpecified, null);
        }
        
        /// <remarks/>
        public void GetVideosAsync(System.DateTime startTime, bool startTimeSpecified, System.DateTime endTime, bool endTimeSpecified, object userState) {
            if ((this.GetVideosOperationCompleted == null)) {
                this.GetVideosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVideosOperationCompleted);
            }
            this.InvokeAsync("GetVideos", new object[] {
                        startTime,
                        startTimeSpecified,
                        endTime,
                        endTimeSpecified}, this.GetVideosOperationCompleted, userState);
        }
        
        private void OnGetVideosOperationCompleted(object arg) {
            if ((this.GetVideosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVideosCompleted(this, new GetVideosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/AddVideo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddVideo(System.DateTime timestamp, [System.Xml.Serialization.XmlIgnoreAttribute()] bool timestampSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fileName, int duration, [System.Xml.Serialization.XmlIgnoreAttribute()] bool durationSpecified, int motion, [System.Xml.Serialization.XmlIgnoreAttribute()] bool motionSpecified, int size, [System.Xml.Serialization.XmlIgnoreAttribute()] bool sizeSpecified) {
            this.Invoke("AddVideo", new object[] {
                        timestamp,
                        timestampSpecified,
                        fileName,
                        duration,
                        durationSpecified,
                        motion,
                        motionSpecified,
                        size,
                        sizeSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddVideo(System.DateTime timestamp, bool timestampSpecified, string fileName, int duration, bool durationSpecified, int motion, bool motionSpecified, int size, bool sizeSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddVideo", new object[] {
                        timestamp,
                        timestampSpecified,
                        fileName,
                        duration,
                        durationSpecified,
                        motion,
                        motionSpecified,
                        size,
                        sizeSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddVideo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddVideoAsync(System.DateTime timestamp, bool timestampSpecified, string fileName, int duration, bool durationSpecified, int motion, bool motionSpecified, int size, bool sizeSpecified) {
            this.AddVideoAsync(timestamp, timestampSpecified, fileName, duration, durationSpecified, motion, motionSpecified, size, sizeSpecified, null);
        }
        
        /// <remarks/>
        public void AddVideoAsync(System.DateTime timestamp, bool timestampSpecified, string fileName, int duration, bool durationSpecified, int motion, bool motionSpecified, int size, bool sizeSpecified, object userState) {
            if ((this.AddVideoOperationCompleted == null)) {
                this.AddVideoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVideoOperationCompleted);
            }
            this.InvokeAsync("AddVideo", new object[] {
                        timestamp,
                        timestampSpecified,
                        fileName,
                        duration,
                        durationSpecified,
                        motion,
                        motionSpecified,
                        size,
                        sizeSpecified}, this.AddVideoOperationCompleted, userState);
        }
        
        private void OnAddVideoOperationCompleted(object arg) {
            if ((this.AddVideoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVideoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/AddAlert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAlert(System.DateTime timestamp, [System.Xml.Serialization.XmlIgnoreAttribute()] bool timestampSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fileName, System.DateTime receiveTime, [System.Xml.Serialization.XmlIgnoreAttribute()] bool receiveTimeSpecified) {
            this.Invoke("AddAlert", new object[] {
                        timestamp,
                        timestampSpecified,
                        fileName,
                        receiveTime,
                        receiveTimeSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddAlert(System.DateTime timestamp, bool timestampSpecified, string fileName, System.DateTime receiveTime, bool receiveTimeSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddAlert", new object[] {
                        timestamp,
                        timestampSpecified,
                        fileName,
                        receiveTime,
                        receiveTimeSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddAlert(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddAlertAsync(System.DateTime timestamp, bool timestampSpecified, string fileName, System.DateTime receiveTime, bool receiveTimeSpecified) {
            this.AddAlertAsync(timestamp, timestampSpecified, fileName, receiveTime, receiveTimeSpecified, null);
        }
        
        /// <remarks/>
        public void AddAlertAsync(System.DateTime timestamp, bool timestampSpecified, string fileName, System.DateTime receiveTime, bool receiveTimeSpecified, object userState) {
            if ((this.AddAlertOperationCompleted == null)) {
                this.AddAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAlertOperationCompleted);
            }
            this.InvokeAsync("AddAlert", new object[] {
                        timestamp,
                        timestampSpecified,
                        fileName,
                        receiveTime,
                        receiveTimeSpecified}, this.AddAlertOperationCompleted, userState);
        }
        
        private void OnAddAlertOperationCompleted(object arg) {
            if ((this.AddAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAlertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/GetAlertsBeforeDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public LogItem[] GetAlertsBeforeDate(System.DateTime timestamp, [System.Xml.Serialization.XmlIgnoreAttribute()] bool timestampSpecified) {
            object[] results = this.Invoke("GetAlertsBeforeDate", new object[] {
                        timestamp,
                        timestampSpecified});
            return ((LogItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAlertsBeforeDate(System.DateTime timestamp, bool timestampSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAlertsBeforeDate", new object[] {
                        timestamp,
                        timestampSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public LogItem[] EndGetAlertsBeforeDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((LogItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAlertsBeforeDateAsync(System.DateTime timestamp, bool timestampSpecified) {
            this.GetAlertsBeforeDateAsync(timestamp, timestampSpecified, null);
        }
        
        /// <remarks/>
        public void GetAlertsBeforeDateAsync(System.DateTime timestamp, bool timestampSpecified, object userState) {
            if ((this.GetAlertsBeforeDateOperationCompleted == null)) {
                this.GetAlertsBeforeDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlertsBeforeDateOperationCompleted);
            }
            this.InvokeAsync("GetAlertsBeforeDate", new object[] {
                        timestamp,
                        timestampSpecified}, this.GetAlertsBeforeDateOperationCompleted, userState);
        }
        
        private void OnGetAlertsBeforeDateOperationCompleted(object arg) {
            if ((this.GetAlertsBeforeDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlertsBeforeDateCompleted(this, new GetAlertsBeforeDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/DeleteAlert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAlert(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            this.Invoke("DeleteAlert", new object[] {
                        id,
                        idSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAlert(int id, bool idSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAlert", new object[] {
                        id,
                        idSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteAlert(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteAlertAsync(int id, bool idSpecified) {
            this.DeleteAlertAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteAlertAsync(int id, bool idSpecified, object userState) {
            if ((this.DeleteAlertOperationCompleted == null)) {
                this.DeleteAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAlertOperationCompleted);
            }
            this.InvokeAsync("DeleteAlert", new object[] {
                        id,
                        idSpecified}, this.DeleteAlertOperationCompleted, userState);
        }
        
        private void OnDeleteAlertOperationCompleted(object arg) {
            if ((this.DeleteAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAlertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICameraData/DeleteVideo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteVideo(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            this.Invoke("DeleteVideo", new object[] {
                        id,
                        idSpecified});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteVideo(int id, bool idSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteVideo", new object[] {
                        id,
                        idSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteVideo(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteVideoAsync(int id, bool idSpecified) {
            this.DeleteVideoAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteVideoAsync(int id, bool idSpecified, object userState) {
            if ((this.DeleteVideoOperationCompleted == null)) {
                this.DeleteVideoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteVideoOperationCompleted);
            }
            this.InvokeAsync("DeleteVideo", new object[] {
                        id,
                        idSpecified}, this.DeleteVideoOperationCompleted, userState);
        }
        
        private void OnDeleteVideoOperationCompleted(object arg) {
            if ((this.DeleteVideoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteVideoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class LogItem {
        
        private string idField;
        
        private System.DateTime timestampField;
        
        private bool timestampFieldSpecified;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimestampSpecified {
            get {
                return this.timestampFieldSpecified;
            }
            set {
                this.timestampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class VideoItem {
        
        private double durationField;
        
        private bool durationFieldSpecified;
        
        private string idField;
        
        private double motionPercentageField;
        
        private bool motionPercentageFieldSpecified;
        
        private string nameField;
        
        private System.DateTime timestampField;
        
        private bool timestampFieldSpecified;
        
        /// <remarks/>
        public double Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public double MotionPercentage {
            get {
                return this.motionPercentageField;
            }
            set {
                this.motionPercentageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MotionPercentageSpecified {
            get {
                return this.motionPercentageFieldSpecified;
            }
            set {
                this.motionPercentageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimestampSpecified {
            get {
                return this.timestampFieldSpecified;
            }
            set {
                this.timestampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PreviousAndNextLogItems {
        
        private LogItem nextItemField;
        
        private LogItem previousItemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LogItem NextItem {
            get {
                return this.nextItemField;
            }
            set {
                this.nextItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LogItem PreviousItem {
            get {
                return this.previousItemField;
            }
            set {
                this.previousItemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetItemFilenameCompletedEventHandler(object sender, GetItemFilenameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemFilenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemFilenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetItemsCompletedEventHandler(object sender, GetItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LogItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LogItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetPreviousAndNextLogItemsCompletedEventHandler(object sender, GetPreviousAndNextLogItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreviousAndNextLogItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreviousAndNextLogItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PreviousAndNextLogItems Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PreviousAndNextLogItems)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetVideoFilenameCompletedEventHandler(object sender, GetVideoFilenameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVideoFilenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVideoFilenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetVideosCompletedEventHandler(object sender, GetVideosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVideosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVideosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VideoItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VideoItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddVideoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddAlertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAlertsBeforeDateCompletedEventHandler(object sender, GetAlertsBeforeDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlertsBeforeDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlertsBeforeDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LogItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LogItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteAlertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteVideoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
