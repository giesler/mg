Option Compare Database

Public Function SupportsX()

  If flgDebug = False Then Exit Function
  
   Dim aintCursorType(4) As Integer
   Dim rstTitles As ADODB.Recordset
   Dim strCnn As String
   Dim intIndex As Integer

   ' Open connections.
  strCnn = CurrentProject.Connection.ConnectionString

   ' Fill array with CursorType constants.
   aintCursorType(0) = adOpenForwardOnly
   aintCursorType(1) = adOpenKeyset
   aintCursorType(2) = adOpenDynamic
   aintCursorType(3) = adOpenStatic
   
   ' Open recordset using each CursorType and
   ' optimistic locking. Then call the DisplaySupport
   ' procedure to display the supported options.
   For intIndex = 0 To 3
      Set rstTitles = New ADODB.Recordset
      rstTitles.CursorType = aintCursorType(intIndex)
      rstTitles.LockType = adLockOptimistic
      rstTitles.Open "tblEmp", strCnn, , , adCmdTable
      
      Select Case aintCursorType(intIndex)
         Case adOpenForwardOnly
            LogDebugMessage "Support:", "ForwardOnly cursor supports:"
         Case adOpenKeyset
            LogDebugMessage "Support:", "Keyset cursor supports:"
         Case adOpenDynamic
            LogDebugMessage "Support:", "Dynamic cursor supports:"
         Case adOpenStatic
            LogDebugMessage "Support:", "Static cursor supports:"
      End Select

      DisplaySupport rstTitles
      rstTitles.Close
   Next intIndex

End Function

Public Sub DisplaySupport(rstTemp As ADODB.Recordset)

   Dim alngConstants(11) As Long
   Dim booSupports As Boolean
   Dim intIndex As Integer

   ' Fill array with cursor option constants.
   alngConstants(0) = adAddNew
   alngConstants(1) = adApproxPosition
   alngConstants(2) = adBookmark
   alngConstants(3) = adDelete
   alngConstants(4) = adFind
   alngConstants(5) = adHoldRecords
   alngConstants(6) = adMovePrevious
   alngConstants(7) = adNotify
   alngConstants(8) = adResync
   alngConstants(9) = adUpdate
   alngConstants(10) = adUpdateBatch
   
   For intIndex = 0 To 10
      booSupports = _
         rstTemp.Supports(alngConstants(intIndex))
      If booSupports Then
         Select Case alngConstants(intIndex)
            Case adAddNew
               LogDebugMessage "Support:", "   AddNew"
            Case adApproxPosition
               LogDebugMessage "Support:", "   AbsolutePosition and AbsolutePage"
            Case adBookmark
               LogDebugMessage "Support:", "   Bookmark"
            Case adDelete
               LogDebugMessage "Support:", "   Delete"
            Case adFind
               LogDebugMessage "Support:", "   Find"
            Case adHoldRecords
               LogDebugMessage "Support:", "   Holding Records"
            Case adMovePrevious
               LogDebugMessage "Support:", "   MovePrevious and Move"
            Case adNotify
               LogDebugMessage "Support:", "   Notifications"
            Case adResync
               LogDebugMessage "Support:", "   Resyncing data"
            Case adUpdate
               LogDebugMessage "Support:", "   Update"
            Case adUpdateBatch
               LogDebugMessage "Support:", "   batch updating"
         End Select
      End If
   Next intIndex

End Sub