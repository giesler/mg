Option Compare Database
Option Explicit

Declare Function GetCurrentProcessId Lib "kernel32" () As Long
Private Const mstrModName = "modVersion"

Public Function CheckVersion()
On Error GoTo errHandler

  Dim curVersion As Double, netVersion As Double, sSrv As String, sEnable As String
  
  If FileExists(GetDBDir & "version.txt") Then
    Open GetDBDir & "\version.txt" For Input As 42
    Input #42, curVersion
    Close 42
  Else
    curVersion = 0.01
  End If
  
  PrivIniRegister gstrIniSection, GetDBDir & "database.ini"
  sSrv = PrivGetString("ServerDBPath", "none")
  If sSrv = "none" Then
    PrivPutString "ServerDBPath", gstrServerDBPath
    sSrv = gstrServerDBPath
  End If
  sEnable = PrivGetString("EnableVersionCheck", "none")
  If sEnable = "none" Then
    PrivPutString "EnableVersionCheck", "1"
    sEnable = "1"
  End If
  
  If sEnable = "0" Then Exit Function
  
  If FileExists(sSrv & "\version.txt") Then
    Open sSrv & "\version.txt" For Input As 43
    Input #43, netVersion
    Close 43
  Else
    curVersion = 0
  End If
  
  If curVersion < netVersion Then
    UpdateDB (True)
  End If

Exit Function

errHandler:
Select Case Err
  Case 53 'file not found
    curVersion = 0
    netVersion = 1
    Resume Next
  Case 52 'bad file name/number
    curVersion = 0
    netVersion = 1
    Resume Next
  Case 62 'input past end of file
    curVersion = 0
    netVersion = 1
    Resume Next
  Case Else
    ErrHand mstrModName, "CheckVersion"
    Exit Function
End Select

End Function

Public Function UpdateDB(flgAuto As Boolean)
On Error GoTo errHandler

  Dim txtLaunch As String, x As Long, sSrvEXE As String
  
  PrivIniRegister gstrIniSection, GetDBDir & "database.ini"
  sSrvEXE = PrivGetString("ServerUpdateEXE ", "none")
  If sSrvEXE = "none" Then
    PrivPutString "ServerUpdateEXE", gstrServerUpdateEXE
    sSrvEXE = gstrServerUpdateEXE
  End If
  
  If Not flgAuto Then
    If MsgBox("Are you sure you want to update your copy of the database?", vbYesNo + vbQuestion) = vbNo Then Exit Function
  ElseIf InStr(Command, "dbupdate") Then
    MsgBox "There is a problem with your autoupdate files - your computer is attempting to run an update again.  Please contact BLI to check your setup.  The database will work fine, it will just update every time you open it.", vbInformation
    Exit Function
  End If
  
  If Not FileExists(sSrvEXE) Then
    MsgBox "The autoupdate function could not find the program to run the update.  You may not be using the most recent version of this program.", vbExclamation
    Exit Function
  End If
  
  txtLaunch = sSrvEXE & " /d:'" & GetDBDir & "' /a:'" & SysCmd(acSysCmdAccessDir) _
      & "' /n:'" & GetDBName & "' /i:" & GetCurrentProcessId
  
  x = Shell(txtLaunch, vbNormalFocus)
  Application.Quit acExit
    
Exit Function
errHandler:
ErrHand mstrModName, "UpdateDB"
Exit Function

End Function

Public Function UpdateMSComCtl()

Dim sMsg As String, x As Long

sMsg = "This will update a file on your computer that will require you to restart your computer.  Are you sure you want to continue?"
If MsgBox(sMsg, vbQuestion + vbYesNo) = vbYes Then
  x = Shell(gstrServerUpdateEXE & " /mscomctl", vbNormalFocus)
  Application.Quit acQuitSaveAll
End If

End Function